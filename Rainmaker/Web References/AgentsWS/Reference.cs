//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace Rainmaker.Web.AgentsWS {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="AgentServiceSoap", Namespace="http://tempuri.org/")]
    public partial class AgentService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback AuthenticateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAgentByAgentIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback AgentActivity_AgentIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsGet_AgentActivityOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAgentWithActivityDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback ToggleAgentResetOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAgentListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAgentsByCampaignOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLoggedInAgentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateAgentStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback AgentInsertUpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteAgentOperationCompleted;
        
        private System.Threading.SendOrPostCallback AgentCampaignMapInsertUpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAgentCampaignMapByAgentIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLoginStatusListOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoginStatusInsertUpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLoginStatusAgentIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback AgentActivityInsertUpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateAgentLogOutOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetScriptOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetScript2OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCampaignByAgentIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCampaignDetailsByAgentIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCampaignDetailsByPhoneNumOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateResultCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertUpdateStationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStationByStationIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStationListOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteStationOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertCampaignManualDialOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsDialerRunningOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddCampaignTransferCallOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public AgentService() {
            this.Url = global::Rainmaker.Web.Properties.Settings.Default.Rainmaker_AgentsWS_AgentService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event AuthenticateCompletedEventHandler AuthenticateCompleted;
        
        /// <remarks/>
        public event GetAgentByAgentIDCompletedEventHandler GetAgentByAgentIDCompleted;
        
        /// <remarks/>
        public event AgentActivity_AgentIDCompletedEventHandler AgentActivity_AgentIDCompleted;
        
        /// <remarks/>
        public event InsGet_AgentActivityCompletedEventHandler InsGet_AgentActivityCompleted;
        
        /// <remarks/>
        public event GetAgentWithActivityDetailsCompletedEventHandler GetAgentWithActivityDetailsCompleted;
        
        /// <remarks/>
        public event ToggleAgentResetCompletedEventHandler ToggleAgentResetCompleted;
        
        /// <remarks/>
        public event GetAgentListCompletedEventHandler GetAgentListCompleted;
        
        /// <remarks/>
        public event GetAgentsByCampaignCompletedEventHandler GetAgentsByCampaignCompleted;
        
        /// <remarks/>
        public event GetLoggedInAgentsCompletedEventHandler GetLoggedInAgentsCompleted;
        
        /// <remarks/>
        public event UpdateAgentStatusCompletedEventHandler UpdateAgentStatusCompleted;
        
        /// <remarks/>
        public event AgentInsertUpdateCompletedEventHandler AgentInsertUpdateCompleted;
        
        /// <remarks/>
        public event DeleteAgentCompletedEventHandler DeleteAgentCompleted;
        
        /// <remarks/>
        public event AgentCampaignMapInsertUpdateCompletedEventHandler AgentCampaignMapInsertUpdateCompleted;
        
        /// <remarks/>
        public event GetAgentCampaignMapByAgentIDCompletedEventHandler GetAgentCampaignMapByAgentIDCompleted;
        
        /// <remarks/>
        public event GetLoginStatusListCompletedEventHandler GetLoginStatusListCompleted;
        
        /// <remarks/>
        public event LoginStatusInsertUpdateCompletedEventHandler LoginStatusInsertUpdateCompleted;
        
        /// <remarks/>
        public event GetLoginStatusAgentIDCompletedEventHandler GetLoginStatusAgentIDCompleted;
        
        /// <remarks/>
        public event AgentActivityInsertUpdateCompletedEventHandler AgentActivityInsertUpdateCompleted;
        
        /// <remarks/>
        public event UpdateAgentLogOutCompletedEventHandler UpdateAgentLogOutCompleted;
        
        /// <remarks/>
        public event GetScriptCompletedEventHandler GetScriptCompleted;
        
        /// <remarks/>
        public event GetScript2CompletedEventHandler GetScript2Completed;
        
        /// <remarks/>
        public event GetCampaignByAgentIDCompletedEventHandler GetCampaignByAgentIDCompleted;
        
        /// <remarks/>
        public event GetCampaignDetailsByAgentIDCompletedEventHandler GetCampaignDetailsByAgentIDCompleted;
        
        /// <remarks/>
        public event GetCampaignDetailsByPhoneNumCompletedEventHandler GetCampaignDetailsByPhoneNumCompleted;
        
        /// <remarks/>
        public event UpdateResultCodeCompletedEventHandler UpdateResultCodeCompleted;
        
        /// <remarks/>
        public event InsertUpdateStationCompletedEventHandler InsertUpdateStationCompleted;
        
        /// <remarks/>
        public event GetStationByStationIDCompletedEventHandler GetStationByStationIDCompleted;
        
        /// <remarks/>
        public event GetStationListCompletedEventHandler GetStationListCompleted;
        
        /// <remarks/>
        public event DeleteStationCompletedEventHandler DeleteStationCompleted;
        
        /// <remarks/>
        public event InsertCampaignManualDialCompletedEventHandler InsertCampaignManualDialCompleted;
        
        /// <remarks/>
        public event IsDialerRunningCompletedEventHandler IsDialerRunningCompleted;
        
        /// <remarks/>
        public event AddCampaignTransferCallCompletedEventHandler AddCampaignTransferCallCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Authenticate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode Authenticate(string userName, string userPassword, string ipAddress, string hostName) {
            object[] results = this.Invoke("Authenticate", new object[] {
                        userName,
                        userPassword,
                        ipAddress,
                        hostName});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void AuthenticateAsync(string userName, string userPassword, string ipAddress, string hostName) {
            this.AuthenticateAsync(userName, userPassword, ipAddress, hostName, null);
        }
        
        /// <remarks/>
        public void AuthenticateAsync(string userName, string userPassword, string ipAddress, string hostName, object userState) {
            if ((this.AuthenticateOperationCompleted == null)) {
                this.AuthenticateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAuthenticateOperationCompleted);
            }
            this.InvokeAsync("Authenticate", new object[] {
                        userName,
                        userPassword,
                        ipAddress,
                        hostName}, this.AuthenticateOperationCompleted, userState);
        }
        
        private void OnAuthenticateOperationCompleted(object arg) {
            if ((this.AuthenticateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AuthenticateCompleted(this, new AuthenticateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAgentByAgentID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetAgentByAgentID(long agentID) {
            object[] results = this.Invoke("GetAgentByAgentID", new object[] {
                        agentID});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetAgentByAgentIDAsync(long agentID) {
            this.GetAgentByAgentIDAsync(agentID, null);
        }
        
        /// <remarks/>
        public void GetAgentByAgentIDAsync(long agentID, object userState) {
            if ((this.GetAgentByAgentIDOperationCompleted == null)) {
                this.GetAgentByAgentIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAgentByAgentIDOperationCompleted);
            }
            this.InvokeAsync("GetAgentByAgentID", new object[] {
                        agentID}, this.GetAgentByAgentIDOperationCompleted, userState);
        }
        
        private void OnGetAgentByAgentIDOperationCompleted(object arg) {
            if ((this.GetAgentByAgentIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAgentByAgentIDCompleted(this, new GetAgentByAgentIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AgentActivity_AgentID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode AgentActivity_AgentID(long agentID) {
            object[] results = this.Invoke("AgentActivity_AgentID", new object[] {
                        agentID});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void AgentActivity_AgentIDAsync(long agentID) {
            this.AgentActivity_AgentIDAsync(agentID, null);
        }
        
        /// <remarks/>
        public void AgentActivity_AgentIDAsync(long agentID, object userState) {
            if ((this.AgentActivity_AgentIDOperationCompleted == null)) {
                this.AgentActivity_AgentIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAgentActivity_AgentIDOperationCompleted);
            }
            this.InvokeAsync("AgentActivity_AgentID", new object[] {
                        agentID}, this.AgentActivity_AgentIDOperationCompleted, userState);
        }
        
        private void OnAgentActivity_AgentIDOperationCompleted(object arg) {
            if ((this.AgentActivity_AgentIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AgentActivity_AgentIDCompleted(this, new AgentActivity_AgentIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsGet_AgentActivity", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode InsGet_AgentActivity(System.Xml.XmlNode xAgent, string campaignDB, string ipAddress, string hostName) {
            object[] results = this.Invoke("InsGet_AgentActivity", new object[] {
                        xAgent,
                        campaignDB,
                        ipAddress,
                        hostName});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void InsGet_AgentActivityAsync(System.Xml.XmlNode xAgent, string campaignDB, string ipAddress, string hostName) {
            this.InsGet_AgentActivityAsync(xAgent, campaignDB, ipAddress, hostName, null);
        }
        
        /// <remarks/>
        public void InsGet_AgentActivityAsync(System.Xml.XmlNode xAgent, string campaignDB, string ipAddress, string hostName, object userState) {
            if ((this.InsGet_AgentActivityOperationCompleted == null)) {
                this.InsGet_AgentActivityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsGet_AgentActivityOperationCompleted);
            }
            this.InvokeAsync("InsGet_AgentActivity", new object[] {
                        xAgent,
                        campaignDB,
                        ipAddress,
                        hostName}, this.InsGet_AgentActivityOperationCompleted, userState);
        }
        
        private void OnInsGet_AgentActivityOperationCompleted(object arg) {
            if ((this.InsGet_AgentActivityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsGet_AgentActivityCompleted(this, new InsGet_AgentActivityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAgentWithActivityDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetAgentWithActivityDetails(long agentID, long activityId, string ipAddress, string hostName) {
            object[] results = this.Invoke("GetAgentWithActivityDetails", new object[] {
                        agentID,
                        activityId,
                        ipAddress,
                        hostName});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetAgentWithActivityDetailsAsync(long agentID, long activityId, string ipAddress, string hostName) {
            this.GetAgentWithActivityDetailsAsync(agentID, activityId, ipAddress, hostName, null);
        }
        
        /// <remarks/>
        public void GetAgentWithActivityDetailsAsync(long agentID, long activityId, string ipAddress, string hostName, object userState) {
            if ((this.GetAgentWithActivityDetailsOperationCompleted == null)) {
                this.GetAgentWithActivityDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAgentWithActivityDetailsOperationCompleted);
            }
            this.InvokeAsync("GetAgentWithActivityDetails", new object[] {
                        agentID,
                        activityId,
                        ipAddress,
                        hostName}, this.GetAgentWithActivityDetailsOperationCompleted, userState);
        }
        
        private void OnGetAgentWithActivityDetailsOperationCompleted(object arg) {
            if ((this.GetAgentWithActivityDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAgentWithActivityDetailsCompleted(this, new GetAgentWithActivityDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ToggleAgentReset", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ToggleAgentReset(long agentID, bool resetSwitch) {
            this.Invoke("ToggleAgentReset", new object[] {
                        agentID,
                        resetSwitch});
        }
        
        /// <remarks/>
        public void ToggleAgentResetAsync(long agentID, bool resetSwitch) {
            this.ToggleAgentResetAsync(agentID, resetSwitch, null);
        }
        
        /// <remarks/>
        public void ToggleAgentResetAsync(long agentID, bool resetSwitch, object userState) {
            if ((this.ToggleAgentResetOperationCompleted == null)) {
                this.ToggleAgentResetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnToggleAgentResetOperationCompleted);
            }
            this.InvokeAsync("ToggleAgentReset", new object[] {
                        agentID,
                        resetSwitch}, this.ToggleAgentResetOperationCompleted, userState);
        }
        
        private void OnToggleAgentResetOperationCompleted(object arg) {
            if ((this.ToggleAgentResetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ToggleAgentResetCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAgentList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAgentList() {
            object[] results = this.Invoke("GetAgentList", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAgentListAsync() {
            this.GetAgentListAsync(null);
        }
        
        /// <remarks/>
        public void GetAgentListAsync(object userState) {
            if ((this.GetAgentListOperationCompleted == null)) {
                this.GetAgentListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAgentListOperationCompleted);
            }
            this.InvokeAsync("GetAgentList", new object[0], this.GetAgentListOperationCompleted, userState);
        }
        
        private void OnGetAgentListOperationCompleted(object arg) {
            if ((this.GetAgentListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAgentListCompleted(this, new GetAgentListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAgentsByCampaign", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAgentsByCampaign(System.Xml.XmlNode xCampaign) {
            object[] results = this.Invoke("GetAgentsByCampaign", new object[] {
                        xCampaign});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAgentsByCampaignAsync(System.Xml.XmlNode xCampaign) {
            this.GetAgentsByCampaignAsync(xCampaign, null);
        }
        
        /// <remarks/>
        public void GetAgentsByCampaignAsync(System.Xml.XmlNode xCampaign, object userState) {
            if ((this.GetAgentsByCampaignOperationCompleted == null)) {
                this.GetAgentsByCampaignOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAgentsByCampaignOperationCompleted);
            }
            this.InvokeAsync("GetAgentsByCampaign", new object[] {
                        xCampaign}, this.GetAgentsByCampaignOperationCompleted, userState);
        }
        
        private void OnGetAgentsByCampaignOperationCompleted(object arg) {
            if ((this.GetAgentsByCampaignCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAgentsByCampaignCompleted(this, new GetAgentsByCampaignCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetLoggedInAgents", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetLoggedInAgents() {
            object[] results = this.Invoke("GetLoggedInAgents", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetLoggedInAgentsAsync() {
            this.GetLoggedInAgentsAsync(null);
        }
        
        /// <remarks/>
        public void GetLoggedInAgentsAsync(object userState) {
            if ((this.GetLoggedInAgentsOperationCompleted == null)) {
                this.GetLoggedInAgentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLoggedInAgentsOperationCompleted);
            }
            this.InvokeAsync("GetLoggedInAgents", new object[0], this.GetLoggedInAgentsOperationCompleted, userState);
        }
        
        private void OnGetLoggedInAgentsOperationCompleted(object arg) {
            if ((this.GetLoggedInAgentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLoggedInAgentsCompleted(this, new GetLoggedInAgentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateAgentStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateAgentStatus(System.Xml.XmlNode xAgent) {
            this.Invoke("UpdateAgentStatus", new object[] {
                        xAgent});
        }
        
        /// <remarks/>
        public void UpdateAgentStatusAsync(System.Xml.XmlNode xAgent) {
            this.UpdateAgentStatusAsync(xAgent, null);
        }
        
        /// <remarks/>
        public void UpdateAgentStatusAsync(System.Xml.XmlNode xAgent, object userState) {
            if ((this.UpdateAgentStatusOperationCompleted == null)) {
                this.UpdateAgentStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateAgentStatusOperationCompleted);
            }
            this.InvokeAsync("UpdateAgentStatus", new object[] {
                        xAgent}, this.UpdateAgentStatusOperationCompleted, userState);
        }
        
        private void OnUpdateAgentStatusOperationCompleted(object arg) {
            if ((this.UpdateAgentStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateAgentStatusCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AgentInsertUpdate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode AgentInsertUpdate(System.Xml.XmlNode xAgent) {
            object[] results = this.Invoke("AgentInsertUpdate", new object[] {
                        xAgent});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void AgentInsertUpdateAsync(System.Xml.XmlNode xAgent) {
            this.AgentInsertUpdateAsync(xAgent, null);
        }
        
        /// <remarks/>
        public void AgentInsertUpdateAsync(System.Xml.XmlNode xAgent, object userState) {
            if ((this.AgentInsertUpdateOperationCompleted == null)) {
                this.AgentInsertUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAgentInsertUpdateOperationCompleted);
            }
            this.InvokeAsync("AgentInsertUpdate", new object[] {
                        xAgent}, this.AgentInsertUpdateOperationCompleted, userState);
        }
        
        private void OnAgentInsertUpdateOperationCompleted(object arg) {
            if ((this.AgentInsertUpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AgentInsertUpdateCompleted(this, new AgentInsertUpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteAgent", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DeleteAgent(long agentID) {
            object[] results = this.Invoke("DeleteAgent", new object[] {
                        agentID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteAgentAsync(long agentID) {
            this.DeleteAgentAsync(agentID, null);
        }
        
        /// <remarks/>
        public void DeleteAgentAsync(long agentID, object userState) {
            if ((this.DeleteAgentOperationCompleted == null)) {
                this.DeleteAgentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteAgentOperationCompleted);
            }
            this.InvokeAsync("DeleteAgent", new object[] {
                        agentID}, this.DeleteAgentOperationCompleted, userState);
        }
        
        private void OnDeleteAgentOperationCompleted(object arg) {
            if ((this.DeleteAgentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteAgentCompleted(this, new DeleteAgentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AgentCampaignMapInsertUpdate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode AgentCampaignMapInsertUpdate(System.Xml.XmlNode xAgentCampaignMap) {
            object[] results = this.Invoke("AgentCampaignMapInsertUpdate", new object[] {
                        xAgentCampaignMap});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void AgentCampaignMapInsertUpdateAsync(System.Xml.XmlNode xAgentCampaignMap) {
            this.AgentCampaignMapInsertUpdateAsync(xAgentCampaignMap, null);
        }
        
        /// <remarks/>
        public void AgentCampaignMapInsertUpdateAsync(System.Xml.XmlNode xAgentCampaignMap, object userState) {
            if ((this.AgentCampaignMapInsertUpdateOperationCompleted == null)) {
                this.AgentCampaignMapInsertUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAgentCampaignMapInsertUpdateOperationCompleted);
            }
            this.InvokeAsync("AgentCampaignMapInsertUpdate", new object[] {
                        xAgentCampaignMap}, this.AgentCampaignMapInsertUpdateOperationCompleted, userState);
        }
        
        private void OnAgentCampaignMapInsertUpdateOperationCompleted(object arg) {
            if ((this.AgentCampaignMapInsertUpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AgentCampaignMapInsertUpdateCompleted(this, new AgentCampaignMapInsertUpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAgentCampaignMapByAgentID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetAgentCampaignMapByAgentID(long agentID) {
            object[] results = this.Invoke("GetAgentCampaignMapByAgentID", new object[] {
                        agentID});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetAgentCampaignMapByAgentIDAsync(long agentID) {
            this.GetAgentCampaignMapByAgentIDAsync(agentID, null);
        }
        
        /// <remarks/>
        public void GetAgentCampaignMapByAgentIDAsync(long agentID, object userState) {
            if ((this.GetAgentCampaignMapByAgentIDOperationCompleted == null)) {
                this.GetAgentCampaignMapByAgentIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAgentCampaignMapByAgentIDOperationCompleted);
            }
            this.InvokeAsync("GetAgentCampaignMapByAgentID", new object[] {
                        agentID}, this.GetAgentCampaignMapByAgentIDOperationCompleted, userState);
        }
        
        private void OnGetAgentCampaignMapByAgentIDOperationCompleted(object arg) {
            if ((this.GetAgentCampaignMapByAgentIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAgentCampaignMapByAgentIDCompleted(this, new GetAgentCampaignMapByAgentIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetLoginStatusList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetLoginStatusList() {
            object[] results = this.Invoke("GetLoginStatusList", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetLoginStatusListAsync() {
            this.GetLoginStatusListAsync(null);
        }
        
        /// <remarks/>
        public void GetLoginStatusListAsync(object userState) {
            if ((this.GetLoginStatusListOperationCompleted == null)) {
                this.GetLoginStatusListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLoginStatusListOperationCompleted);
            }
            this.InvokeAsync("GetLoginStatusList", new object[0], this.GetLoginStatusListOperationCompleted, userState);
        }
        
        private void OnGetLoginStatusListOperationCompleted(object arg) {
            if ((this.GetLoginStatusListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLoginStatusListCompleted(this, new GetLoginStatusListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LoginStatusInsertUpdate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode LoginStatusInsertUpdate(System.Xml.XmlNode xAgentLogin, string currentCampaignDBConn) {
            object[] results = this.Invoke("LoginStatusInsertUpdate", new object[] {
                        xAgentLogin,
                        currentCampaignDBConn});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void LoginStatusInsertUpdateAsync(System.Xml.XmlNode xAgentLogin, string currentCampaignDBConn) {
            this.LoginStatusInsertUpdateAsync(xAgentLogin, currentCampaignDBConn, null);
        }
        
        /// <remarks/>
        public void LoginStatusInsertUpdateAsync(System.Xml.XmlNode xAgentLogin, string currentCampaignDBConn, object userState) {
            if ((this.LoginStatusInsertUpdateOperationCompleted == null)) {
                this.LoginStatusInsertUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoginStatusInsertUpdateOperationCompleted);
            }
            this.InvokeAsync("LoginStatusInsertUpdate", new object[] {
                        xAgentLogin,
                        currentCampaignDBConn}, this.LoginStatusInsertUpdateOperationCompleted, userState);
        }
        
        private void OnLoginStatusInsertUpdateOperationCompleted(object arg) {
            if ((this.LoginStatusInsertUpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoginStatusInsertUpdateCompleted(this, new LoginStatusInsertUpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetLoginStatusAgentID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetLoginStatusAgentID(long agentID, string currentCampaignDBConn) {
            object[] results = this.Invoke("GetLoginStatusAgentID", new object[] {
                        agentID,
                        currentCampaignDBConn});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetLoginStatusAgentIDAsync(long agentID, string currentCampaignDBConn) {
            this.GetLoginStatusAgentIDAsync(agentID, currentCampaignDBConn, null);
        }
        
        /// <remarks/>
        public void GetLoginStatusAgentIDAsync(long agentID, string currentCampaignDBConn, object userState) {
            if ((this.GetLoginStatusAgentIDOperationCompleted == null)) {
                this.GetLoginStatusAgentIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLoginStatusAgentIDOperationCompleted);
            }
            this.InvokeAsync("GetLoginStatusAgentID", new object[] {
                        agentID,
                        currentCampaignDBConn}, this.GetLoginStatusAgentIDOperationCompleted, userState);
        }
        
        private void OnGetLoginStatusAgentIDOperationCompleted(object arg) {
            if ((this.GetLoginStatusAgentIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLoginStatusAgentIDCompleted(this, new GetLoginStatusAgentIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AgentActivityInsertUpdate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode AgentActivityInsertUpdate(System.Xml.XmlNode xAgent) {
            object[] results = this.Invoke("AgentActivityInsertUpdate", new object[] {
                        xAgent});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void AgentActivityInsertUpdateAsync(System.Xml.XmlNode xAgent) {
            this.AgentActivityInsertUpdateAsync(xAgent, null);
        }
        
        /// <remarks/>
        public void AgentActivityInsertUpdateAsync(System.Xml.XmlNode xAgent, object userState) {
            if ((this.AgentActivityInsertUpdateOperationCompleted == null)) {
                this.AgentActivityInsertUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAgentActivityInsertUpdateOperationCompleted);
            }
            this.InvokeAsync("AgentActivityInsertUpdate", new object[] {
                        xAgent}, this.AgentActivityInsertUpdateOperationCompleted, userState);
        }
        
        private void OnAgentActivityInsertUpdateOperationCompleted(object arg) {
            if ((this.AgentActivityInsertUpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AgentActivityInsertUpdateCompleted(this, new AgentActivityInsertUpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateAgentLogOut", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateAgentLogOut(System.Xml.XmlNode xAgent) {
            this.Invoke("UpdateAgentLogOut", new object[] {
                        xAgent});
        }
        
        /// <remarks/>
        public void UpdateAgentLogOutAsync(System.Xml.XmlNode xAgent) {
            this.UpdateAgentLogOutAsync(xAgent, null);
        }
        
        /// <remarks/>
        public void UpdateAgentLogOutAsync(System.Xml.XmlNode xAgent, object userState) {
            if ((this.UpdateAgentLogOutOperationCompleted == null)) {
                this.UpdateAgentLogOutOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateAgentLogOutOperationCompleted);
            }
            this.InvokeAsync("UpdateAgentLogOut", new object[] {
                        xAgent}, this.UpdateAgentLogOutOperationCompleted, userState);
        }
        
        private void OnUpdateAgentLogOutOperationCompleted(object arg) {
            if ((this.UpdateAgentLogOutCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateAgentLogOutCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetScript", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetScript(System.Xml.XmlNode xCampaign) {
            object[] results = this.Invoke("GetScript", new object[] {
                        xCampaign});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetScriptAsync(System.Xml.XmlNode xCampaign) {
            this.GetScriptAsync(xCampaign, null);
        }
        
        /// <remarks/>
        public void GetScriptAsync(System.Xml.XmlNode xCampaign, object userState) {
            if ((this.GetScriptOperationCompleted == null)) {
                this.GetScriptOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetScriptOperationCompleted);
            }
            this.InvokeAsync("GetScript", new object[] {
                        xCampaign}, this.GetScriptOperationCompleted, userState);
        }
        
        private void OnGetScriptOperationCompleted(object arg) {
            if ((this.GetScriptCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetScriptCompleted(this, new GetScriptCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetScript2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetScript2(System.Xml.XmlNode xCampaign, bool isVerification) {
            object[] results = this.Invoke("GetScript2", new object[] {
                        xCampaign,
                        isVerification});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetScript2Async(System.Xml.XmlNode xCampaign, bool isVerification) {
            this.GetScript2Async(xCampaign, isVerification, null);
        }
        
        /// <remarks/>
        public void GetScript2Async(System.Xml.XmlNode xCampaign, bool isVerification, object userState) {
            if ((this.GetScript2OperationCompleted == null)) {
                this.GetScript2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetScript2OperationCompleted);
            }
            this.InvokeAsync("GetScript2", new object[] {
                        xCampaign,
                        isVerification}, this.GetScript2OperationCompleted, userState);
        }
        
        private void OnGetScript2OperationCompleted(object arg) {
            if ((this.GetScript2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetScript2Completed(this, new GetScript2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCampaignByAgentID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetCampaignByAgentID(System.Xml.XmlNode xAgent, System.Xml.XmlNode xCampaign) {
            object[] results = this.Invoke("GetCampaignByAgentID", new object[] {
                        xAgent,
                        xCampaign});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetCampaignByAgentIDAsync(System.Xml.XmlNode xAgent, System.Xml.XmlNode xCampaign) {
            this.GetCampaignByAgentIDAsync(xAgent, xCampaign, null);
        }
        
        /// <remarks/>
        public void GetCampaignByAgentIDAsync(System.Xml.XmlNode xAgent, System.Xml.XmlNode xCampaign, object userState) {
            if ((this.GetCampaignByAgentIDOperationCompleted == null)) {
                this.GetCampaignByAgentIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCampaignByAgentIDOperationCompleted);
            }
            this.InvokeAsync("GetCampaignByAgentID", new object[] {
                        xAgent,
                        xCampaign}, this.GetCampaignByAgentIDOperationCompleted, userState);
        }
        
        private void OnGetCampaignByAgentIDOperationCompleted(object arg) {
            if ((this.GetCampaignByAgentIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCampaignByAgentIDCompleted(this, new GetCampaignByAgentIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCampaignDetailsByAgentID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetCampaignDetailsByAgentID(long agentID, System.Xml.XmlNode xCampaign, bool isManualDial) {
            object[] results = this.Invoke("GetCampaignDetailsByAgentID", new object[] {
                        agentID,
                        xCampaign,
                        isManualDial});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetCampaignDetailsByAgentIDAsync(long agentID, System.Xml.XmlNode xCampaign, bool isManualDial) {
            this.GetCampaignDetailsByAgentIDAsync(agentID, xCampaign, isManualDial, null);
        }
        
        /// <remarks/>
        public void GetCampaignDetailsByAgentIDAsync(long agentID, System.Xml.XmlNode xCampaign, bool isManualDial, object userState) {
            if ((this.GetCampaignDetailsByAgentIDOperationCompleted == null)) {
                this.GetCampaignDetailsByAgentIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCampaignDetailsByAgentIDOperationCompleted);
            }
            this.InvokeAsync("GetCampaignDetailsByAgentID", new object[] {
                        agentID,
                        xCampaign,
                        isManualDial}, this.GetCampaignDetailsByAgentIDOperationCompleted, userState);
        }
        
        private void OnGetCampaignDetailsByAgentIDOperationCompleted(object arg) {
            if ((this.GetCampaignDetailsByAgentIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCampaignDetailsByAgentIDCompleted(this, new GetCampaignDetailsByAgentIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCampaignDetailsByPhoneNum", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetCampaignDetailsByPhoneNum(string phoneNumber, System.Xml.XmlNode xCampaign) {
            object[] results = this.Invoke("GetCampaignDetailsByPhoneNum", new object[] {
                        phoneNumber,
                        xCampaign});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetCampaignDetailsByPhoneNumAsync(string phoneNumber, System.Xml.XmlNode xCampaign) {
            this.GetCampaignDetailsByPhoneNumAsync(phoneNumber, xCampaign, null);
        }
        
        /// <remarks/>
        public void GetCampaignDetailsByPhoneNumAsync(string phoneNumber, System.Xml.XmlNode xCampaign, object userState) {
            if ((this.GetCampaignDetailsByPhoneNumOperationCompleted == null)) {
                this.GetCampaignDetailsByPhoneNumOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCampaignDetailsByPhoneNumOperationCompleted);
            }
            this.InvokeAsync("GetCampaignDetailsByPhoneNum", new object[] {
                        phoneNumber,
                        xCampaign}, this.GetCampaignDetailsByPhoneNumOperationCompleted, userState);
        }
        
        private void OnGetCampaignDetailsByPhoneNumOperationCompleted(object arg) {
            if ((this.GetCampaignDetailsByPhoneNumCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCampaignDetailsByPhoneNumCompleted(this, new GetCampaignDetailsByPhoneNumCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateResultCode", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateResultCode(System.Xml.XmlNode xCampaign, System.Xml.XmlNode xAgent, long uniqueKey, int callresultcode, long queryId) {
            this.Invoke("UpdateResultCode", new object[] {
                        xCampaign,
                        xAgent,
                        uniqueKey,
                        callresultcode,
                        queryId});
        }
        
        /// <remarks/>
        public void UpdateResultCodeAsync(System.Xml.XmlNode xCampaign, System.Xml.XmlNode xAgent, long uniqueKey, int callresultcode, long queryId) {
            this.UpdateResultCodeAsync(xCampaign, xAgent, uniqueKey, callresultcode, queryId, null);
        }
        
        /// <remarks/>
        public void UpdateResultCodeAsync(System.Xml.XmlNode xCampaign, System.Xml.XmlNode xAgent, long uniqueKey, int callresultcode, long queryId, object userState) {
            if ((this.UpdateResultCodeOperationCompleted == null)) {
                this.UpdateResultCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateResultCodeOperationCompleted);
            }
            this.InvokeAsync("UpdateResultCode", new object[] {
                        xCampaign,
                        xAgent,
                        uniqueKey,
                        callresultcode,
                        queryId}, this.UpdateResultCodeOperationCompleted, userState);
        }
        
        private void OnUpdateResultCodeOperationCompleted(object arg) {
            if ((this.UpdateResultCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateResultCodeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertUpdateStation", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long InsertUpdateStation(System.Xml.XmlNode xAgentStation) {
            object[] results = this.Invoke("InsertUpdateStation", new object[] {
                        xAgentStation});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void InsertUpdateStationAsync(System.Xml.XmlNode xAgentStation) {
            this.InsertUpdateStationAsync(xAgentStation, null);
        }
        
        /// <remarks/>
        public void InsertUpdateStationAsync(System.Xml.XmlNode xAgentStation, object userState) {
            if ((this.InsertUpdateStationOperationCompleted == null)) {
                this.InsertUpdateStationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertUpdateStationOperationCompleted);
            }
            this.InvokeAsync("InsertUpdateStation", new object[] {
                        xAgentStation}, this.InsertUpdateStationOperationCompleted, userState);
        }
        
        private void OnInsertUpdateStationOperationCompleted(object arg) {
            if ((this.InsertUpdateStationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertUpdateStationCompleted(this, new InsertUpdateStationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetStationByStationID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetStationByStationID(long stationID) {
            object[] results = this.Invoke("GetStationByStationID", new object[] {
                        stationID});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetStationByStationIDAsync(long stationID) {
            this.GetStationByStationIDAsync(stationID, null);
        }
        
        /// <remarks/>
        public void GetStationByStationIDAsync(long stationID, object userState) {
            if ((this.GetStationByStationIDOperationCompleted == null)) {
                this.GetStationByStationIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStationByStationIDOperationCompleted);
            }
            this.InvokeAsync("GetStationByStationID", new object[] {
                        stationID}, this.GetStationByStationIDOperationCompleted, userState);
        }
        
        private void OnGetStationByStationIDOperationCompleted(object arg) {
            if ((this.GetStationByStationIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStationByStationIDCompleted(this, new GetStationByStationIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetStationList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetStationList() {
            object[] results = this.Invoke("GetStationList", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetStationListAsync() {
            this.GetStationListAsync(null);
        }
        
        /// <remarks/>
        public void GetStationListAsync(object userState) {
            if ((this.GetStationListOperationCompleted == null)) {
                this.GetStationListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStationListOperationCompleted);
            }
            this.InvokeAsync("GetStationList", new object[0], this.GetStationListOperationCompleted, userState);
        }
        
        private void OnGetStationListOperationCompleted(object arg) {
            if ((this.GetStationListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStationListCompleted(this, new GetStationListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteStation", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DeleteStation(long stationID) {
            object[] results = this.Invoke("DeleteStation", new object[] {
                        stationID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteStationAsync(long stationID) {
            this.DeleteStationAsync(stationID, null);
        }
        
        /// <remarks/>
        public void DeleteStationAsync(long stationID, object userState) {
            if ((this.DeleteStationOperationCompleted == null)) {
                this.DeleteStationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteStationOperationCompleted);
            }
            this.InvokeAsync("DeleteStation", new object[] {
                        stationID}, this.DeleteStationOperationCompleted, userState);
        }
        
        private void OnDeleteStationOperationCompleted(object arg) {
            if ((this.DeleteStationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteStationCompleted(this, new DeleteStationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertCampaignManualDial", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int InsertCampaignManualDial(System.Xml.XmlNode xCampaign, long agentID, string agentName, string phoneNum) {
            object[] results = this.Invoke("InsertCampaignManualDial", new object[] {
                        xCampaign,
                        agentID,
                        agentName,
                        phoneNum});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void InsertCampaignManualDialAsync(System.Xml.XmlNode xCampaign, long agentID, string agentName, string phoneNum) {
            this.InsertCampaignManualDialAsync(xCampaign, agentID, agentName, phoneNum, null);
        }
        
        /// <remarks/>
        public void InsertCampaignManualDialAsync(System.Xml.XmlNode xCampaign, long agentID, string agentName, string phoneNum, object userState) {
            if ((this.InsertCampaignManualDialOperationCompleted == null)) {
                this.InsertCampaignManualDialOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertCampaignManualDialOperationCompleted);
            }
            this.InvokeAsync("InsertCampaignManualDial", new object[] {
                        xCampaign,
                        agentID,
                        agentName,
                        phoneNum}, this.InsertCampaignManualDialOperationCompleted, userState);
        }
        
        private void OnInsertCampaignManualDialOperationCompleted(object arg) {
            if ((this.InsertCampaignManualDialCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertCampaignManualDialCompleted(this, new InsertCampaignManualDialCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IsDialerRunning", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsDialerRunning() {
            object[] results = this.Invoke("IsDialerRunning", new object[0]);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsDialerRunningAsync() {
            this.IsDialerRunningAsync(null);
        }
        
        /// <remarks/>
        public void IsDialerRunningAsync(object userState) {
            if ((this.IsDialerRunningOperationCompleted == null)) {
                this.IsDialerRunningOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsDialerRunningOperationCompleted);
            }
            this.InvokeAsync("IsDialerRunning", new object[0], this.IsDialerRunningOperationCompleted, userState);
        }
        
        private void OnIsDialerRunningOperationCompleted(object arg) {
            if ((this.IsDialerRunningCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsDialerRunningCompleted(this, new IsDialerRunningCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddCampaignTransferCall", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AddCampaignTransferCall(string strCampDB, long UniqueKey, System.Xml.XmlNode xAgent, string offsiteNumber) {
            this.Invoke("AddCampaignTransferCall", new object[] {
                        strCampDB,
                        UniqueKey,
                        xAgent,
                        offsiteNumber});
        }
        
        /// <remarks/>
        public void AddCampaignTransferCallAsync(string strCampDB, long UniqueKey, System.Xml.XmlNode xAgent, string offsiteNumber) {
            this.AddCampaignTransferCallAsync(strCampDB, UniqueKey, xAgent, offsiteNumber, null);
        }
        
        /// <remarks/>
        public void AddCampaignTransferCallAsync(string strCampDB, long UniqueKey, System.Xml.XmlNode xAgent, string offsiteNumber, object userState) {
            if ((this.AddCampaignTransferCallOperationCompleted == null)) {
                this.AddCampaignTransferCallOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddCampaignTransferCallOperationCompleted);
            }
            this.InvokeAsync("AddCampaignTransferCall", new object[] {
                        strCampDB,
                        UniqueKey,
                        xAgent,
                        offsiteNumber}, this.AddCampaignTransferCallOperationCompleted, userState);
        }
        
        private void OnAddCampaignTransferCallOperationCompleted(object arg) {
            if ((this.AddCampaignTransferCallCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddCampaignTransferCallCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void AuthenticateCompletedEventHandler(object sender, AuthenticateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AuthenticateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AuthenticateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetAgentByAgentIDCompletedEventHandler(object sender, GetAgentByAgentIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAgentByAgentIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAgentByAgentIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void AgentActivity_AgentIDCompletedEventHandler(object sender, AgentActivity_AgentIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AgentActivity_AgentIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AgentActivity_AgentIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void InsGet_AgentActivityCompletedEventHandler(object sender, InsGet_AgentActivityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsGet_AgentActivityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsGet_AgentActivityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetAgentWithActivityDetailsCompletedEventHandler(object sender, GetAgentWithActivityDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAgentWithActivityDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAgentWithActivityDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void ToggleAgentResetCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetAgentListCompletedEventHandler(object sender, GetAgentListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAgentListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAgentListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetAgentsByCampaignCompletedEventHandler(object sender, GetAgentsByCampaignCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAgentsByCampaignCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAgentsByCampaignCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetLoggedInAgentsCompletedEventHandler(object sender, GetLoggedInAgentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLoggedInAgentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLoggedInAgentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void UpdateAgentStatusCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void AgentInsertUpdateCompletedEventHandler(object sender, AgentInsertUpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AgentInsertUpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AgentInsertUpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void DeleteAgentCompletedEventHandler(object sender, DeleteAgentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteAgentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteAgentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void AgentCampaignMapInsertUpdateCompletedEventHandler(object sender, AgentCampaignMapInsertUpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AgentCampaignMapInsertUpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AgentCampaignMapInsertUpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetAgentCampaignMapByAgentIDCompletedEventHandler(object sender, GetAgentCampaignMapByAgentIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAgentCampaignMapByAgentIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAgentCampaignMapByAgentIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetLoginStatusListCompletedEventHandler(object sender, GetLoginStatusListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLoginStatusListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLoginStatusListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoginStatusInsertUpdateCompletedEventHandler(object sender, LoginStatusInsertUpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoginStatusInsertUpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoginStatusInsertUpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetLoginStatusAgentIDCompletedEventHandler(object sender, GetLoginStatusAgentIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLoginStatusAgentIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLoginStatusAgentIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void AgentActivityInsertUpdateCompletedEventHandler(object sender, AgentActivityInsertUpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AgentActivityInsertUpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AgentActivityInsertUpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void UpdateAgentLogOutCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetScriptCompletedEventHandler(object sender, GetScriptCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetScriptCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetScriptCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetScript2CompletedEventHandler(object sender, GetScript2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetScript2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetScript2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetCampaignByAgentIDCompletedEventHandler(object sender, GetCampaignByAgentIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCampaignByAgentIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCampaignByAgentIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetCampaignDetailsByAgentIDCompletedEventHandler(object sender, GetCampaignDetailsByAgentIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCampaignDetailsByAgentIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCampaignDetailsByAgentIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetCampaignDetailsByPhoneNumCompletedEventHandler(object sender, GetCampaignDetailsByPhoneNumCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCampaignDetailsByPhoneNumCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCampaignDetailsByPhoneNumCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void UpdateResultCodeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void InsertUpdateStationCompletedEventHandler(object sender, InsertUpdateStationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertUpdateStationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertUpdateStationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetStationByStationIDCompletedEventHandler(object sender, GetStationByStationIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStationByStationIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStationByStationIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetStationListCompletedEventHandler(object sender, GetStationListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStationListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStationListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void DeleteStationCompletedEventHandler(object sender, DeleteStationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteStationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteStationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void InsertCampaignManualDialCompletedEventHandler(object sender, InsertCampaignManualDialCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertCampaignManualDialCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertCampaignManualDialCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void IsDialerRunningCompletedEventHandler(object sender, IsDialerRunningCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsDialerRunningCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsDialerRunningCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void AddCampaignTransferCallCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}

#pragma warning restore 1591