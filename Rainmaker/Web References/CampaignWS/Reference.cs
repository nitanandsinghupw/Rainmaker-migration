//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace Rainmaker.Web.CampaignWS {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="CampaignServiceSoap", Namespace="http://tempuri.org/")]
    public partial class CampaignService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback InsertUpdateScheduledCampaignOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateCampaignScheduleOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPhoneLinesInUseCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckCampaignTransferCallOperationCompleted;
        
        private System.Threading.SendOrPostCallback SubmitAdminRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAdminRequestsOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateAdminRequestStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTrainingSchemeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTrainingPageListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTrainingSchemeListOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateActiveTrainingSchemeOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteTrainingSchemeOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddTrainingSchemeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTrainingPageOperationCompleted;
        
        private System.Threading.SendOrPostCallback TrainingPageInsertUpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetActiveTrainingPageListOperationCompleted;
        
        private System.Threading.SendOrPostCallback CampaignInsertUpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback ScrubDNCOperationCompleted;
        
        private System.Threading.SendOrPostCallback CampaignCloneOperationCompleted;
        
        private System.Threading.SendOrPostCallback CampaignStatusUpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback ResetCampaignsToIdleOperationCompleted;
        
        private System.Threading.SendOrPostCallback ShutdownAllCampaignsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCampaignActiveDialCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback CampaignDialStatusUpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCampaignListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetActiveCampaignListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCampaignScoreBoardDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteCampaignOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCampaignByCampaignIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteExportedLeadsOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateCallDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetCallHangupOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsCallHangupOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddAgentToCallDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddVerificationAgentToCallDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddResultCodeToCallListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOffsiteTransferNumberOperationCompleted;
        
        private System.Threading.SendOrPostCallback LogSilentCallOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateCallCompletionOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateCampaignDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCampaignDetailsByKeyOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetManualDailCallDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetResultCodesOperationCompleted;
        
        private System.Threading.SendOrPostCallback ResultCodeInsertUpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetResultCodeByResultCodeIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOtherParameterOperationCompleted;
        
        private System.Threading.SendOrPostCallback OtherParameterInsertUpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDialingParameterOperationCompleted;
        
        private System.Threading.SendOrPostCallback DialingParameterInsertUpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertDialerActivityOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateDialerStartOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateDialerStopOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDigitalizedRecordingOperationCompleted;
        
        private System.Threading.SendOrPostCallback DigitalizedRecordingInsertUpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCampaignQueryStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateQueryStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback PrepareDialerQueryOperationCompleted;
        
        private System.Threading.SendOrPostCallback CampaignQueryStatusUpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback CampaignQueryStatusUpdateDialerOperationCompleted;
        
        private System.Threading.SendOrPostCallback CampaignQueryCompleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateCampaignQueryStatsOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateCampaignQueryInDialerQueueOperationCompleted;
        
        private System.Threading.SendOrPostCallback ClearQueryStatsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetScriptListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPageListByScriptIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetScriptByScriptIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetScriptByScriptGUIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback CloneScriptOperationCompleted;
        
        private System.Threading.SendOrPostCallback ScriptInsertUpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteScriptOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryDetailInsertUpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetQueryListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetActiveQueryListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStandbyQueryListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCampaignDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCampaignData_Recycle_LastOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsNeverCallSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateAvailableCountToQueryOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateCampaignQueriesStatsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetQueryDetailsByQueryIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteQueryOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteQueryByNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteQueryDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback AreaCodeRuleInsertUpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback AreaCodeInsertUpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAreaCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteAreaCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAreaCodeRuleByAgentIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GlobalDialingInsertUpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetGlobalDialingParamsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAgentStatOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAgentStatByStatIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertUpdateAgentStatOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateAgentStatsOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateAgentStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCampaignFieldsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCampaignStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFieldTypesOperationCompleted;
        
        private System.Threading.SendOrPostCallback CampaignFieldsInsertUpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteCampaignFieldOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public CampaignService() {
            this.Url = global::Rainmaker.Web.Properties.Settings.Default.Rainmaker_CampaignWS_CampaignService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event InsertUpdateScheduledCampaignCompletedEventHandler InsertUpdateScheduledCampaignCompleted;
        
        /// <remarks/>
        public event UpdateCampaignScheduleCompletedEventHandler UpdateCampaignScheduleCompleted;
        
        /// <remarks/>
        public event GetPhoneLinesInUseCountCompletedEventHandler GetPhoneLinesInUseCountCompleted;
        
        /// <remarks/>
        public event CheckCampaignTransferCallCompletedEventHandler CheckCampaignTransferCallCompleted;
        
        /// <remarks/>
        public event SubmitAdminRequestCompletedEventHandler SubmitAdminRequestCompleted;
        
        /// <remarks/>
        public event GetAdminRequestsCompletedEventHandler GetAdminRequestsCompleted;
        
        /// <remarks/>
        public event UpdateAdminRequestStatusCompletedEventHandler UpdateAdminRequestStatusCompleted;
        
        /// <remarks/>
        public event GetTrainingSchemeCompletedEventHandler GetTrainingSchemeCompleted;
        
        /// <remarks/>
        public event GetTrainingPageListCompletedEventHandler GetTrainingPageListCompleted;
        
        /// <remarks/>
        public event GetTrainingSchemeListCompletedEventHandler GetTrainingSchemeListCompleted;
        
        /// <remarks/>
        public event UpdateActiveTrainingSchemeCompletedEventHandler UpdateActiveTrainingSchemeCompleted;
        
        /// <remarks/>
        public event DeleteTrainingSchemeCompletedEventHandler DeleteTrainingSchemeCompleted;
        
        /// <remarks/>
        public event AddTrainingSchemeCompletedEventHandler AddTrainingSchemeCompleted;
        
        /// <remarks/>
        public event GetTrainingPageCompletedEventHandler GetTrainingPageCompleted;
        
        /// <remarks/>
        public event TrainingPageInsertUpdateCompletedEventHandler TrainingPageInsertUpdateCompleted;
        
        /// <remarks/>
        public event GetActiveTrainingPageListCompletedEventHandler GetActiveTrainingPageListCompleted;
        
        /// <remarks/>
        public event CampaignInsertUpdateCompletedEventHandler CampaignInsertUpdateCompleted;
        
        /// <remarks/>
        public event ScrubDNCCompletedEventHandler ScrubDNCCompleted;
        
        /// <remarks/>
        public event CampaignCloneCompletedEventHandler CampaignCloneCompleted;
        
        /// <remarks/>
        public event CampaignStatusUpdateCompletedEventHandler CampaignStatusUpdateCompleted;
        
        /// <remarks/>
        public event ResetCampaignsToIdleCompletedEventHandler ResetCampaignsToIdleCompleted;
        
        /// <remarks/>
        public event ShutdownAllCampaignsCompletedEventHandler ShutdownAllCampaignsCompleted;
        
        /// <remarks/>
        public event GetCampaignActiveDialCountCompletedEventHandler GetCampaignActiveDialCountCompleted;
        
        /// <remarks/>
        public event CampaignDialStatusUpdateCompletedEventHandler CampaignDialStatusUpdateCompleted;
        
        /// <remarks/>
        public event GetCampaignListCompletedEventHandler GetCampaignListCompleted;
        
        /// <remarks/>
        public event GetActiveCampaignListCompletedEventHandler GetActiveCampaignListCompleted;
        
        /// <remarks/>
        public event GetCampaignScoreBoardDataCompletedEventHandler GetCampaignScoreBoardDataCompleted;
        
        /// <remarks/>
        public event DeleteCampaignCompletedEventHandler DeleteCampaignCompleted;
        
        /// <remarks/>
        public event GetCampaignByCampaignIDCompletedEventHandler GetCampaignByCampaignIDCompleted;
        
        /// <remarks/>
        public event DeleteExportedLeadsCompletedEventHandler DeleteExportedLeadsCompleted;
        
        /// <remarks/>
        public event UpdateCallDetailCompletedEventHandler UpdateCallDetailCompleted;
        
        /// <remarks/>
        public event SetCallHangupCompletedEventHandler SetCallHangupCompleted;
        
        /// <remarks/>
        public event IsCallHangupCompletedEventHandler IsCallHangupCompleted;
        
        /// <remarks/>
        public event AddAgentToCallDetailCompletedEventHandler AddAgentToCallDetailCompleted;
        
        /// <remarks/>
        public event AddVerificationAgentToCallDetailCompletedEventHandler AddVerificationAgentToCallDetailCompleted;
        
        /// <remarks/>
        public event AddResultCodeToCallListCompletedEventHandler AddResultCodeToCallListCompleted;
        
        /// <remarks/>
        public event GetOffsiteTransferNumberCompletedEventHandler GetOffsiteTransferNumberCompleted;
        
        /// <remarks/>
        public event LogSilentCallCompletedEventHandler LogSilentCallCompleted;
        
        /// <remarks/>
        public event UpdateCallCompletionCompletedEventHandler UpdateCallCompletionCompleted;
        
        /// <remarks/>
        public event UpdateCampaignDetailsCompletedEventHandler UpdateCampaignDetailsCompleted;
        
        /// <remarks/>
        public event GetCampaignDetailsByKeyCompletedEventHandler GetCampaignDetailsByKeyCompleted;
        
        /// <remarks/>
        public event GetManualDailCallDetailsCompletedEventHandler GetManualDailCallDetailsCompleted;
        
        /// <remarks/>
        public event GetResultCodesCompletedEventHandler GetResultCodesCompleted;
        
        /// <remarks/>
        public event ResultCodeInsertUpdateCompletedEventHandler ResultCodeInsertUpdateCompleted;
        
        /// <remarks/>
        public event GetResultCodeByResultCodeIDCompletedEventHandler GetResultCodeByResultCodeIDCompleted;
        
        /// <remarks/>
        public event GetOtherParameterCompletedEventHandler GetOtherParameterCompleted;
        
        /// <remarks/>
        public event OtherParameterInsertUpdateCompletedEventHandler OtherParameterInsertUpdateCompleted;
        
        /// <remarks/>
        public event GetDialingParameterCompletedEventHandler GetDialingParameterCompleted;
        
        /// <remarks/>
        public event DialingParameterInsertUpdateCompletedEventHandler DialingParameterInsertUpdateCompleted;
        
        /// <remarks/>
        public event InsertDialerActivityCompletedEventHandler InsertDialerActivityCompleted;
        
        /// <remarks/>
        public event UpdateDialerStartCompletedEventHandler UpdateDialerStartCompleted;
        
        /// <remarks/>
        public event UpdateDialerStopCompletedEventHandler UpdateDialerStopCompleted;
        
        /// <remarks/>
        public event GetDigitalizedRecordingCompletedEventHandler GetDigitalizedRecordingCompleted;
        
        /// <remarks/>
        public event DigitalizedRecordingInsertUpdateCompletedEventHandler DigitalizedRecordingInsertUpdateCompleted;
        
        /// <remarks/>
        public event GetCampaignQueryStatusCompletedEventHandler GetCampaignQueryStatusCompleted;
        
        /// <remarks/>
        public event UpdateQueryStatusCompletedEventHandler UpdateQueryStatusCompleted;
        
        /// <remarks/>
        public event PrepareDialerQueryCompletedEventHandler PrepareDialerQueryCompleted;
        
        /// <remarks/>
        public event CampaignQueryStatusUpdateCompletedEventHandler CampaignQueryStatusUpdateCompleted;
        
        /// <remarks/>
        public event CampaignQueryStatusUpdateDialerCompletedEventHandler CampaignQueryStatusUpdateDialerCompleted;
        
        /// <remarks/>
        public event CampaignQueryCompleteCompletedEventHandler CampaignQueryCompleteCompleted;
        
        /// <remarks/>
        public event UpdateCampaignQueryStatsCompletedEventHandler UpdateCampaignQueryStatsCompleted;
        
        /// <remarks/>
        public event UpdateCampaignQueryInDialerQueueCompletedEventHandler UpdateCampaignQueryInDialerQueueCompleted;
        
        /// <remarks/>
        public event ClearQueryStatsCompletedEventHandler ClearQueryStatsCompleted;
        
        /// <remarks/>
        public event GetScriptListCompletedEventHandler GetScriptListCompleted;
        
        /// <remarks/>
        public event GetPageListByScriptIdCompletedEventHandler GetPageListByScriptIdCompleted;
        
        /// <remarks/>
        public event GetScriptByScriptIDCompletedEventHandler GetScriptByScriptIDCompleted;
        
        /// <remarks/>
        public event GetScriptByScriptGUIDCompletedEventHandler GetScriptByScriptGUIDCompleted;
        
        /// <remarks/>
        public event CloneScriptCompletedEventHandler CloneScriptCompleted;
        
        /// <remarks/>
        public event ScriptInsertUpdateCompletedEventHandler ScriptInsertUpdateCompleted;
        
        /// <remarks/>
        public event DeleteScriptCompletedEventHandler DeleteScriptCompleted;
        
        /// <remarks/>
        public event QueryDetailInsertUpdateCompletedEventHandler QueryDetailInsertUpdateCompleted;
        
        /// <remarks/>
        public event GetQueryListCompletedEventHandler GetQueryListCompleted;
        
        /// <remarks/>
        public event GetActiveQueryListCompletedEventHandler GetActiveQueryListCompleted;
        
        /// <remarks/>
        public event GetStandbyQueryListCompletedEventHandler GetStandbyQueryListCompleted;
        
        /// <remarks/>
        public event GetCampaignDataCompletedEventHandler GetCampaignDataCompleted;
        
        /// <remarks/>
        public event GetCampaignData_Recycle_LastCompletedEventHandler GetCampaignData_Recycle_LastCompleted;
        
        /// <remarks/>
        public event IsNeverCallSetCompletedEventHandler IsNeverCallSetCompleted;
        
        /// <remarks/>
        public event UpdateAvailableCountToQueryCompletedEventHandler UpdateAvailableCountToQueryCompleted;
        
        /// <remarks/>
        public event UpdateCampaignQueriesStatsCompletedEventHandler UpdateCampaignQueriesStatsCompleted;
        
        /// <remarks/>
        public event GetQueryDetailsByQueryIDCompletedEventHandler GetQueryDetailsByQueryIDCompleted;
        
        /// <remarks/>
        public event DeleteQueryCompletedEventHandler DeleteQueryCompleted;
        
        /// <remarks/>
        public event DeleteQueryByNameCompletedEventHandler DeleteQueryByNameCompleted;
        
        /// <remarks/>
        public event DeleteQueryDetailCompletedEventHandler DeleteQueryDetailCompleted;
        
        /// <remarks/>
        public event AreaCodeRuleInsertUpdateCompletedEventHandler AreaCodeRuleInsertUpdateCompleted;
        
        /// <remarks/>
        public event AreaCodeInsertUpdateCompletedEventHandler AreaCodeInsertUpdateCompleted;
        
        /// <remarks/>
        public event GetAreaCodeCompletedEventHandler GetAreaCodeCompleted;
        
        /// <remarks/>
        public event DeleteAreaCodeCompletedEventHandler DeleteAreaCodeCompleted;
        
        /// <remarks/>
        public event GetAreaCodeRuleByAgentIDCompletedEventHandler GetAreaCodeRuleByAgentIDCompleted;
        
        /// <remarks/>
        public event GlobalDialingInsertUpdateCompletedEventHandler GlobalDialingInsertUpdateCompleted;
        
        /// <remarks/>
        public event GetGlobalDialingParamsCompletedEventHandler GetGlobalDialingParamsCompleted;
        
        /// <remarks/>
        public event GetAgentStatCompletedEventHandler GetAgentStatCompleted;
        
        /// <remarks/>
        public event GetAgentStatByStatIDCompletedEventHandler GetAgentStatByStatIDCompleted;
        
        /// <remarks/>
        public event InsertUpdateAgentStatCompletedEventHandler InsertUpdateAgentStatCompleted;
        
        /// <remarks/>
        public event UpdateAgentStatsCompletedEventHandler UpdateAgentStatsCompleted;
        
        /// <remarks/>
        public event UpdateAgentStatusCompletedEventHandler UpdateAgentStatusCompleted;
        
        /// <remarks/>
        public event GetCampaignFieldsCompletedEventHandler GetCampaignFieldsCompleted;
        
        /// <remarks/>
        public event GetCampaignStatusCompletedEventHandler GetCampaignStatusCompleted;
        
        /// <remarks/>
        public event GetFieldTypesCompletedEventHandler GetFieldTypesCompleted;
        
        /// <remarks/>
        public event CampaignFieldsInsertUpdateCompletedEventHandler CampaignFieldsInsertUpdateCompleted;
        
        /// <remarks/>
        public event DeleteCampaignFieldCompletedEventHandler DeleteCampaignFieldCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertUpdateScheduledCampaign", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void InsertUpdateScheduledCampaign(System.Xml.XmlNode xCampaign, System.Xml.XmlNode xCampaigndetails) {
            this.Invoke("InsertUpdateScheduledCampaign", new object[] {
                        xCampaign,
                        xCampaigndetails});
        }
        
        /// <remarks/>
        public void InsertUpdateScheduledCampaignAsync(System.Xml.XmlNode xCampaign, System.Xml.XmlNode xCampaigndetails) {
            this.InsertUpdateScheduledCampaignAsync(xCampaign, xCampaigndetails, null);
        }
        
        /// <remarks/>
        public void InsertUpdateScheduledCampaignAsync(System.Xml.XmlNode xCampaign, System.Xml.XmlNode xCampaigndetails, object userState) {
            if ((this.InsertUpdateScheduledCampaignOperationCompleted == null)) {
                this.InsertUpdateScheduledCampaignOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertUpdateScheduledCampaignOperationCompleted);
            }
            this.InvokeAsync("InsertUpdateScheduledCampaign", new object[] {
                        xCampaign,
                        xCampaigndetails}, this.InsertUpdateScheduledCampaignOperationCompleted, userState);
        }
        
        private void OnInsertUpdateScheduledCampaignOperationCompleted(object arg) {
            if ((this.InsertUpdateScheduledCampaignCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertUpdateScheduledCampaignCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateCampaignSchedule", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateCampaignSchedule(System.Xml.XmlNode xCampaign, System.Xml.XmlNode xCampaigndetails, bool isFromAgentInterface) {
            this.Invoke("UpdateCampaignSchedule", new object[] {
                        xCampaign,
                        xCampaigndetails,
                        isFromAgentInterface});
        }
        
        /// <remarks/>
        public void UpdateCampaignScheduleAsync(System.Xml.XmlNode xCampaign, System.Xml.XmlNode xCampaigndetails, bool isFromAgentInterface) {
            this.UpdateCampaignScheduleAsync(xCampaign, xCampaigndetails, isFromAgentInterface, null);
        }
        
        /// <remarks/>
        public void UpdateCampaignScheduleAsync(System.Xml.XmlNode xCampaign, System.Xml.XmlNode xCampaigndetails, bool isFromAgentInterface, object userState) {
            if ((this.UpdateCampaignScheduleOperationCompleted == null)) {
                this.UpdateCampaignScheduleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateCampaignScheduleOperationCompleted);
            }
            this.InvokeAsync("UpdateCampaignSchedule", new object[] {
                        xCampaign,
                        xCampaigndetails,
                        isFromAgentInterface}, this.UpdateCampaignScheduleOperationCompleted, userState);
        }
        
        private void OnUpdateCampaignScheduleOperationCompleted(object arg) {
            if ((this.UpdateCampaignScheduleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateCampaignScheduleCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPhoneLinesInUseCount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetPhoneLinesInUseCount(long CampaignID) {
            object[] results = this.Invoke("GetPhoneLinesInUseCount", new object[] {
                        CampaignID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetPhoneLinesInUseCountAsync(long CampaignID) {
            this.GetPhoneLinesInUseCountAsync(CampaignID, null);
        }
        
        /// <remarks/>
        public void GetPhoneLinesInUseCountAsync(long CampaignID, object userState) {
            if ((this.GetPhoneLinesInUseCountOperationCompleted == null)) {
                this.GetPhoneLinesInUseCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPhoneLinesInUseCountOperationCompleted);
            }
            this.InvokeAsync("GetPhoneLinesInUseCount", new object[] {
                        CampaignID}, this.GetPhoneLinesInUseCountOperationCompleted, userState);
        }
        
        private void OnGetPhoneLinesInUseCountOperationCompleted(object arg) {
            if ((this.GetPhoneLinesInUseCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPhoneLinesInUseCountCompleted(this, new GetPhoneLinesInUseCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckCampaignTransferCall", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CheckCampaignTransferCall(string strCampDB, long UniqueKey) {
            object[] results = this.Invoke("CheckCampaignTransferCall", new object[] {
                        strCampDB,
                        UniqueKey});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CheckCampaignTransferCallAsync(string strCampDB, long UniqueKey) {
            this.CheckCampaignTransferCallAsync(strCampDB, UniqueKey, null);
        }
        
        /// <remarks/>
        public void CheckCampaignTransferCallAsync(string strCampDB, long UniqueKey, object userState) {
            if ((this.CheckCampaignTransferCallOperationCompleted == null)) {
                this.CheckCampaignTransferCallOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckCampaignTransferCallOperationCompleted);
            }
            this.InvokeAsync("CheckCampaignTransferCall", new object[] {
                        strCampDB,
                        UniqueKey}, this.CheckCampaignTransferCallOperationCompleted, userState);
        }
        
        private void OnCheckCampaignTransferCallOperationCompleted(object arg) {
            if ((this.CheckCampaignTransferCallCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckCampaignTransferCallCompleted(this, new CheckCampaignTransferCallCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SubmitAdminRequest", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SubmitAdminRequest(int requestType, string requestData) {
            this.Invoke("SubmitAdminRequest", new object[] {
                        requestType,
                        requestData});
        }
        
        /// <remarks/>
        public void SubmitAdminRequestAsync(int requestType, string requestData) {
            this.SubmitAdminRequestAsync(requestType, requestData, null);
        }
        
        /// <remarks/>
        public void SubmitAdminRequestAsync(int requestType, string requestData, object userState) {
            if ((this.SubmitAdminRequestOperationCompleted == null)) {
                this.SubmitAdminRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSubmitAdminRequestOperationCompleted);
            }
            this.InvokeAsync("SubmitAdminRequest", new object[] {
                        requestType,
                        requestData}, this.SubmitAdminRequestOperationCompleted, userState);
        }
        
        private void OnSubmitAdminRequestOperationCompleted(object arg) {
            if ((this.SubmitAdminRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SubmitAdminRequestCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAdminRequests", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAdminRequests() {
            object[] results = this.Invoke("GetAdminRequests", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAdminRequestsAsync() {
            this.GetAdminRequestsAsync(null);
        }
        
        /// <remarks/>
        public void GetAdminRequestsAsync(object userState) {
            if ((this.GetAdminRequestsOperationCompleted == null)) {
                this.GetAdminRequestsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAdminRequestsOperationCompleted);
            }
            this.InvokeAsync("GetAdminRequests", new object[0], this.GetAdminRequestsOperationCompleted, userState);
        }
        
        private void OnGetAdminRequestsOperationCompleted(object arg) {
            if ((this.GetAdminRequestsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAdminRequestsCompleted(this, new GetAdminRequestsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateAdminRequestStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateAdminRequestStatus(long requestID, int requestStatus) {
            this.Invoke("UpdateAdminRequestStatus", new object[] {
                        requestID,
                        requestStatus});
        }
        
        /// <remarks/>
        public void UpdateAdminRequestStatusAsync(long requestID, int requestStatus) {
            this.UpdateAdminRequestStatusAsync(requestID, requestStatus, null);
        }
        
        /// <remarks/>
        public void UpdateAdminRequestStatusAsync(long requestID, int requestStatus, object userState) {
            if ((this.UpdateAdminRequestStatusOperationCompleted == null)) {
                this.UpdateAdminRequestStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateAdminRequestStatusOperationCompleted);
            }
            this.InvokeAsync("UpdateAdminRequestStatus", new object[] {
                        requestID,
                        requestStatus}, this.UpdateAdminRequestStatusOperationCompleted, userState);
        }
        
        private void OnUpdateAdminRequestStatusOperationCompleted(object arg) {
            if ((this.UpdateAdminRequestStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateAdminRequestStatusCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTrainingScheme", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetTrainingScheme(System.Xml.XmlNode xCampaign, long trainingSchemeID) {
            object[] results = this.Invoke("GetTrainingScheme", new object[] {
                        xCampaign,
                        trainingSchemeID});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetTrainingSchemeAsync(System.Xml.XmlNode xCampaign, long trainingSchemeID) {
            this.GetTrainingSchemeAsync(xCampaign, trainingSchemeID, null);
        }
        
        /// <remarks/>
        public void GetTrainingSchemeAsync(System.Xml.XmlNode xCampaign, long trainingSchemeID, object userState) {
            if ((this.GetTrainingSchemeOperationCompleted == null)) {
                this.GetTrainingSchemeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTrainingSchemeOperationCompleted);
            }
            this.InvokeAsync("GetTrainingScheme", new object[] {
                        xCampaign,
                        trainingSchemeID}, this.GetTrainingSchemeOperationCompleted, userState);
        }
        
        private void OnGetTrainingSchemeOperationCompleted(object arg) {
            if ((this.GetTrainingSchemeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTrainingSchemeCompleted(this, new GetTrainingSchemeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTrainingPageList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetTrainingPageList(System.Xml.XmlNode xCampaign, long trainingSchemeID) {
            object[] results = this.Invoke("GetTrainingPageList", new object[] {
                        xCampaign,
                        trainingSchemeID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetTrainingPageListAsync(System.Xml.XmlNode xCampaign, long trainingSchemeID) {
            this.GetTrainingPageListAsync(xCampaign, trainingSchemeID, null);
        }
        
        /// <remarks/>
        public void GetTrainingPageListAsync(System.Xml.XmlNode xCampaign, long trainingSchemeID, object userState) {
            if ((this.GetTrainingPageListOperationCompleted == null)) {
                this.GetTrainingPageListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTrainingPageListOperationCompleted);
            }
            this.InvokeAsync("GetTrainingPageList", new object[] {
                        xCampaign,
                        trainingSchemeID}, this.GetTrainingPageListOperationCompleted, userState);
        }
        
        private void OnGetTrainingPageListOperationCompleted(object arg) {
            if ((this.GetTrainingPageListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTrainingPageListCompleted(this, new GetTrainingPageListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTrainingSchemeList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetTrainingSchemeList(System.Xml.XmlNode xCampaign) {
            object[] results = this.Invoke("GetTrainingSchemeList", new object[] {
                        xCampaign});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetTrainingSchemeListAsync(System.Xml.XmlNode xCampaign) {
            this.GetTrainingSchemeListAsync(xCampaign, null);
        }
        
        /// <remarks/>
        public void GetTrainingSchemeListAsync(System.Xml.XmlNode xCampaign, object userState) {
            if ((this.GetTrainingSchemeListOperationCompleted == null)) {
                this.GetTrainingSchemeListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTrainingSchemeListOperationCompleted);
            }
            this.InvokeAsync("GetTrainingSchemeList", new object[] {
                        xCampaign}, this.GetTrainingSchemeListOperationCompleted, userState);
        }
        
        private void OnGetTrainingSchemeListOperationCompleted(object arg) {
            if ((this.GetTrainingSchemeListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTrainingSchemeListCompleted(this, new GetTrainingSchemeListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateActiveTrainingScheme", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateActiveTrainingScheme(System.Xml.XmlNode xCampaign, long trainingSchemeID) {
            this.Invoke("UpdateActiveTrainingScheme", new object[] {
                        xCampaign,
                        trainingSchemeID});
        }
        
        /// <remarks/>
        public void UpdateActiveTrainingSchemeAsync(System.Xml.XmlNode xCampaign, long trainingSchemeID) {
            this.UpdateActiveTrainingSchemeAsync(xCampaign, trainingSchemeID, null);
        }
        
        /// <remarks/>
        public void UpdateActiveTrainingSchemeAsync(System.Xml.XmlNode xCampaign, long trainingSchemeID, object userState) {
            if ((this.UpdateActiveTrainingSchemeOperationCompleted == null)) {
                this.UpdateActiveTrainingSchemeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateActiveTrainingSchemeOperationCompleted);
            }
            this.InvokeAsync("UpdateActiveTrainingScheme", new object[] {
                        xCampaign,
                        trainingSchemeID}, this.UpdateActiveTrainingSchemeOperationCompleted, userState);
        }
        
        private void OnUpdateActiveTrainingSchemeOperationCompleted(object arg) {
            if ((this.UpdateActiveTrainingSchemeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateActiveTrainingSchemeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteTrainingScheme", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteTrainingScheme(System.Xml.XmlNode xCampaign, long trainingSchemeID) {
            this.Invoke("DeleteTrainingScheme", new object[] {
                        xCampaign,
                        trainingSchemeID});
        }
        
        /// <remarks/>
        public void DeleteTrainingSchemeAsync(System.Xml.XmlNode xCampaign, long trainingSchemeID) {
            this.DeleteTrainingSchemeAsync(xCampaign, trainingSchemeID, null);
        }
        
        /// <remarks/>
        public void DeleteTrainingSchemeAsync(System.Xml.XmlNode xCampaign, long trainingSchemeID, object userState) {
            if ((this.DeleteTrainingSchemeOperationCompleted == null)) {
                this.DeleteTrainingSchemeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteTrainingSchemeOperationCompleted);
            }
            this.InvokeAsync("DeleteTrainingScheme", new object[] {
                        xCampaign,
                        trainingSchemeID}, this.DeleteTrainingSchemeOperationCompleted, userState);
        }
        
        private void OnDeleteTrainingSchemeOperationCompleted(object arg) {
            if ((this.DeleteTrainingSchemeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteTrainingSchemeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddTrainingScheme", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long AddTrainingScheme(System.Xml.XmlNode xCampaign, string trainingSchemeName) {
            object[] results = this.Invoke("AddTrainingScheme", new object[] {
                        xCampaign,
                        trainingSchemeName});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void AddTrainingSchemeAsync(System.Xml.XmlNode xCampaign, string trainingSchemeName) {
            this.AddTrainingSchemeAsync(xCampaign, trainingSchemeName, null);
        }
        
        /// <remarks/>
        public void AddTrainingSchemeAsync(System.Xml.XmlNode xCampaign, string trainingSchemeName, object userState) {
            if ((this.AddTrainingSchemeOperationCompleted == null)) {
                this.AddTrainingSchemeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddTrainingSchemeOperationCompleted);
            }
            this.InvokeAsync("AddTrainingScheme", new object[] {
                        xCampaign,
                        trainingSchemeName}, this.AddTrainingSchemeOperationCompleted, userState);
        }
        
        private void OnAddTrainingSchemeOperationCompleted(object arg) {
            if ((this.AddTrainingSchemeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddTrainingSchemeCompleted(this, new AddTrainingSchemeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTrainingPage", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetTrainingPage(System.Xml.XmlNode xCampaign, long trainingPageID) {
            object[] results = this.Invoke("GetTrainingPage", new object[] {
                        xCampaign,
                        trainingPageID});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetTrainingPageAsync(System.Xml.XmlNode xCampaign, long trainingPageID) {
            this.GetTrainingPageAsync(xCampaign, trainingPageID, null);
        }
        
        /// <remarks/>
        public void GetTrainingPageAsync(System.Xml.XmlNode xCampaign, long trainingPageID, object userState) {
            if ((this.GetTrainingPageOperationCompleted == null)) {
                this.GetTrainingPageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTrainingPageOperationCompleted);
            }
            this.InvokeAsync("GetTrainingPage", new object[] {
                        xCampaign,
                        trainingPageID}, this.GetTrainingPageOperationCompleted, userState);
        }
        
        private void OnGetTrainingPageOperationCompleted(object arg) {
            if ((this.GetTrainingPageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTrainingPageCompleted(this, new GetTrainingPageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/TrainingPageInsertUpdate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode TrainingPageInsertUpdate(System.Xml.XmlNode xCampaign, System.Xml.XmlNode xTrainingPage) {
            object[] results = this.Invoke("TrainingPageInsertUpdate", new object[] {
                        xCampaign,
                        xTrainingPage});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void TrainingPageInsertUpdateAsync(System.Xml.XmlNode xCampaign, System.Xml.XmlNode xTrainingPage) {
            this.TrainingPageInsertUpdateAsync(xCampaign, xTrainingPage, null);
        }
        
        /// <remarks/>
        public void TrainingPageInsertUpdateAsync(System.Xml.XmlNode xCampaign, System.Xml.XmlNode xTrainingPage, object userState) {
            if ((this.TrainingPageInsertUpdateOperationCompleted == null)) {
                this.TrainingPageInsertUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTrainingPageInsertUpdateOperationCompleted);
            }
            this.InvokeAsync("TrainingPageInsertUpdate", new object[] {
                        xCampaign,
                        xTrainingPage}, this.TrainingPageInsertUpdateOperationCompleted, userState);
        }
        
        private void OnTrainingPageInsertUpdateOperationCompleted(object arg) {
            if ((this.TrainingPageInsertUpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TrainingPageInsertUpdateCompleted(this, new TrainingPageInsertUpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetActiveTrainingPageList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetActiveTrainingPageList(System.Xml.XmlNode xCampaign) {
            object[] results = this.Invoke("GetActiveTrainingPageList", new object[] {
                        xCampaign});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetActiveTrainingPageListAsync(System.Xml.XmlNode xCampaign) {
            this.GetActiveTrainingPageListAsync(xCampaign, null);
        }
        
        /// <remarks/>
        public void GetActiveTrainingPageListAsync(System.Xml.XmlNode xCampaign, object userState) {
            if ((this.GetActiveTrainingPageListOperationCompleted == null)) {
                this.GetActiveTrainingPageListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetActiveTrainingPageListOperationCompleted);
            }
            this.InvokeAsync("GetActiveTrainingPageList", new object[] {
                        xCampaign}, this.GetActiveTrainingPageListOperationCompleted, userState);
        }
        
        private void OnGetActiveTrainingPageListOperationCompleted(object arg) {
            if ((this.GetActiveTrainingPageListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetActiveTrainingPageListCompleted(this, new GetActiveTrainingPageListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CampaignInsertUpdate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode CampaignInsertUpdate(System.Xml.XmlNode xNodeCampaign) {
            object[] results = this.Invoke("CampaignInsertUpdate", new object[] {
                        xNodeCampaign});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void CampaignInsertUpdateAsync(System.Xml.XmlNode xNodeCampaign) {
            this.CampaignInsertUpdateAsync(xNodeCampaign, null);
        }
        
        /// <remarks/>
        public void CampaignInsertUpdateAsync(System.Xml.XmlNode xNodeCampaign, object userState) {
            if ((this.CampaignInsertUpdateOperationCompleted == null)) {
                this.CampaignInsertUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCampaignInsertUpdateOperationCompleted);
            }
            this.InvokeAsync("CampaignInsertUpdate", new object[] {
                        xNodeCampaign}, this.CampaignInsertUpdateOperationCompleted, userState);
        }
        
        private void OnCampaignInsertUpdateOperationCompleted(object arg) {
            if ((this.CampaignInsertUpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CampaignInsertUpdateCompleted(this, new CampaignInsertUpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ScrubDNC", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ScrubDNC(string campaignConnString) {
            this.Invoke("ScrubDNC", new object[] {
                        campaignConnString});
        }
        
        /// <remarks/>
        public void ScrubDNCAsync(string campaignConnString) {
            this.ScrubDNCAsync(campaignConnString, null);
        }
        
        /// <remarks/>
        public void ScrubDNCAsync(string campaignConnString, object userState) {
            if ((this.ScrubDNCOperationCompleted == null)) {
                this.ScrubDNCOperationCompleted = new System.Threading.SendOrPostCallback(this.OnScrubDNCOperationCompleted);
            }
            this.InvokeAsync("ScrubDNC", new object[] {
                        campaignConnString}, this.ScrubDNCOperationCompleted, userState);
        }
        
        private void OnScrubDNCOperationCompleted(object arg) {
            if ((this.ScrubDNCCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ScrubDNCCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CampaignClone", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode CampaignClone(System.Xml.XmlNode xNodeCampaign, System.Xml.XmlNode xNodeCloneInfo) {
            object[] results = this.Invoke("CampaignClone", new object[] {
                        xNodeCampaign,
                        xNodeCloneInfo});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void CampaignCloneAsync(System.Xml.XmlNode xNodeCampaign, System.Xml.XmlNode xNodeCloneInfo) {
            this.CampaignCloneAsync(xNodeCampaign, xNodeCloneInfo, null);
        }
        
        /// <remarks/>
        public void CampaignCloneAsync(System.Xml.XmlNode xNodeCampaign, System.Xml.XmlNode xNodeCloneInfo, object userState) {
            if ((this.CampaignCloneOperationCompleted == null)) {
                this.CampaignCloneOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCampaignCloneOperationCompleted);
            }
            this.InvokeAsync("CampaignClone", new object[] {
                        xNodeCampaign,
                        xNodeCloneInfo}, this.CampaignCloneOperationCompleted, userState);
        }
        
        private void OnCampaignCloneOperationCompleted(object arg) {
            if ((this.CampaignCloneCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CampaignCloneCompleted(this, new CampaignCloneCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CampaignStatusUpdate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode CampaignStatusUpdate(System.Xml.XmlNode xCampaign) {
            object[] results = this.Invoke("CampaignStatusUpdate", new object[] {
                        xCampaign});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void CampaignStatusUpdateAsync(System.Xml.XmlNode xCampaign) {
            this.CampaignStatusUpdateAsync(xCampaign, null);
        }
        
        /// <remarks/>
        public void CampaignStatusUpdateAsync(System.Xml.XmlNode xCampaign, object userState) {
            if ((this.CampaignStatusUpdateOperationCompleted == null)) {
                this.CampaignStatusUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCampaignStatusUpdateOperationCompleted);
            }
            this.InvokeAsync("CampaignStatusUpdate", new object[] {
                        xCampaign}, this.CampaignStatusUpdateOperationCompleted, userState);
        }
        
        private void OnCampaignStatusUpdateOperationCompleted(object arg) {
            if ((this.CampaignStatusUpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CampaignStatusUpdateCompleted(this, new CampaignStatusUpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ResetCampaignsToIdle", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ResetCampaignsToIdle() {
            this.Invoke("ResetCampaignsToIdle", new object[0]);
        }
        
        /// <remarks/>
        public void ResetCampaignsToIdleAsync() {
            this.ResetCampaignsToIdleAsync(null);
        }
        
        /// <remarks/>
        public void ResetCampaignsToIdleAsync(object userState) {
            if ((this.ResetCampaignsToIdleOperationCompleted == null)) {
                this.ResetCampaignsToIdleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnResetCampaignsToIdleOperationCompleted);
            }
            this.InvokeAsync("ResetCampaignsToIdle", new object[0], this.ResetCampaignsToIdleOperationCompleted, userState);
        }
        
        private void OnResetCampaignsToIdleOperationCompleted(object arg) {
            if ((this.ResetCampaignsToIdleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ResetCampaignsToIdleCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ShutdownAllCampaigns", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ShutdownAllCampaigns() {
            this.Invoke("ShutdownAllCampaigns", new object[0]);
        }
        
        /// <remarks/>
        public void ShutdownAllCampaignsAsync() {
            this.ShutdownAllCampaignsAsync(null);
        }
        
        /// <remarks/>
        public void ShutdownAllCampaignsAsync(object userState) {
            if ((this.ShutdownAllCampaignsOperationCompleted == null)) {
                this.ShutdownAllCampaignsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnShutdownAllCampaignsOperationCompleted);
            }
            this.InvokeAsync("ShutdownAllCampaigns", new object[0], this.ShutdownAllCampaignsOperationCompleted, userState);
        }
        
        private void OnShutdownAllCampaignsOperationCompleted(object arg) {
            if ((this.ShutdownAllCampaignsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ShutdownAllCampaignsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCampaignActiveDialCount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetCampaignActiveDialCount(string campaignConnString) {
            object[] results = this.Invoke("GetCampaignActiveDialCount", new object[] {
                        campaignConnString});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetCampaignActiveDialCountAsync(string campaignConnString) {
            this.GetCampaignActiveDialCountAsync(campaignConnString, null);
        }
        
        /// <remarks/>
        public void GetCampaignActiveDialCountAsync(string campaignConnString, object userState) {
            if ((this.GetCampaignActiveDialCountOperationCompleted == null)) {
                this.GetCampaignActiveDialCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCampaignActiveDialCountOperationCompleted);
            }
            this.InvokeAsync("GetCampaignActiveDialCount", new object[] {
                        campaignConnString}, this.GetCampaignActiveDialCountOperationCompleted, userState);
        }
        
        private void OnGetCampaignActiveDialCountOperationCompleted(object arg) {
            if ((this.GetCampaignActiveDialCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCampaignActiveDialCountCompleted(this, new GetCampaignActiveDialCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CampaignDialStatusUpdate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode CampaignDialStatusUpdate(System.Xml.XmlNode xCampaign) {
            object[] results = this.Invoke("CampaignDialStatusUpdate", new object[] {
                        xCampaign});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void CampaignDialStatusUpdateAsync(System.Xml.XmlNode xCampaign) {
            this.CampaignDialStatusUpdateAsync(xCampaign, null);
        }
        
        /// <remarks/>
        public void CampaignDialStatusUpdateAsync(System.Xml.XmlNode xCampaign, object userState) {
            if ((this.CampaignDialStatusUpdateOperationCompleted == null)) {
                this.CampaignDialStatusUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCampaignDialStatusUpdateOperationCompleted);
            }
            this.InvokeAsync("CampaignDialStatusUpdate", new object[] {
                        xCampaign}, this.CampaignDialStatusUpdateOperationCompleted, userState);
        }
        
        private void OnCampaignDialStatusUpdateOperationCompleted(object arg) {
            if ((this.CampaignDialStatusUpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CampaignDialStatusUpdateCompleted(this, new CampaignDialStatusUpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCampaignList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetCampaignList() {
            object[] results = this.Invoke("GetCampaignList", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetCampaignListAsync() {
            this.GetCampaignListAsync(null);
        }
        
        /// <remarks/>
        public void GetCampaignListAsync(object userState) {
            if ((this.GetCampaignListOperationCompleted == null)) {
                this.GetCampaignListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCampaignListOperationCompleted);
            }
            this.InvokeAsync("GetCampaignList", new object[0], this.GetCampaignListOperationCompleted, userState);
        }
        
        private void OnGetCampaignListOperationCompleted(object arg) {
            if ((this.GetCampaignListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCampaignListCompleted(this, new GetCampaignListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetActiveCampaignList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetActiveCampaignList() {
            object[] results = this.Invoke("GetActiveCampaignList", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetActiveCampaignListAsync() {
            this.GetActiveCampaignListAsync(null);
        }
        
        /// <remarks/>
        public void GetActiveCampaignListAsync(object userState) {
            if ((this.GetActiveCampaignListOperationCompleted == null)) {
                this.GetActiveCampaignListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetActiveCampaignListOperationCompleted);
            }
            this.InvokeAsync("GetActiveCampaignList", new object[0], this.GetActiveCampaignListOperationCompleted, userState);
        }
        
        private void OnGetActiveCampaignListOperationCompleted(object arg) {
            if ((this.GetActiveCampaignListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetActiveCampaignListCompleted(this, new GetActiveCampaignListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCampaignScoreBoardData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetCampaignScoreBoardData(System.Xml.XmlNode xCampaign) {
            object[] results = this.Invoke("GetCampaignScoreBoardData", new object[] {
                        xCampaign});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetCampaignScoreBoardDataAsync(System.Xml.XmlNode xCampaign) {
            this.GetCampaignScoreBoardDataAsync(xCampaign, null);
        }
        
        /// <remarks/>
        public void GetCampaignScoreBoardDataAsync(System.Xml.XmlNode xCampaign, object userState) {
            if ((this.GetCampaignScoreBoardDataOperationCompleted == null)) {
                this.GetCampaignScoreBoardDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCampaignScoreBoardDataOperationCompleted);
            }
            this.InvokeAsync("GetCampaignScoreBoardData", new object[] {
                        xCampaign}, this.GetCampaignScoreBoardDataOperationCompleted, userState);
        }
        
        private void OnGetCampaignScoreBoardDataOperationCompleted(object arg) {
            if ((this.GetCampaignScoreBoardDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCampaignScoreBoardDataCompleted(this, new GetCampaignScoreBoardDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteCampaign", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DeleteCampaign(long CampaignID, string ShortDescription) {
            object[] results = this.Invoke("DeleteCampaign", new object[] {
                        CampaignID,
                        ShortDescription});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteCampaignAsync(long CampaignID, string ShortDescription) {
            this.DeleteCampaignAsync(CampaignID, ShortDescription, null);
        }
        
        /// <remarks/>
        public void DeleteCampaignAsync(long CampaignID, string ShortDescription, object userState) {
            if ((this.DeleteCampaignOperationCompleted == null)) {
                this.DeleteCampaignOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteCampaignOperationCompleted);
            }
            this.InvokeAsync("DeleteCampaign", new object[] {
                        CampaignID,
                        ShortDescription}, this.DeleteCampaignOperationCompleted, userState);
        }
        
        private void OnDeleteCampaignOperationCompleted(object arg) {
            if ((this.DeleteCampaignCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteCampaignCompleted(this, new DeleteCampaignCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCampaignByCampaignID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetCampaignByCampaignID(long CampaignID) {
            object[] results = this.Invoke("GetCampaignByCampaignID", new object[] {
                        CampaignID});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetCampaignByCampaignIDAsync(long CampaignID) {
            this.GetCampaignByCampaignIDAsync(CampaignID, null);
        }
        
        /// <remarks/>
        public void GetCampaignByCampaignIDAsync(long CampaignID, object userState) {
            if ((this.GetCampaignByCampaignIDOperationCompleted == null)) {
                this.GetCampaignByCampaignIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCampaignByCampaignIDOperationCompleted);
            }
            this.InvokeAsync("GetCampaignByCampaignID", new object[] {
                        CampaignID}, this.GetCampaignByCampaignIDOperationCompleted, userState);
        }
        
        private void OnGetCampaignByCampaignIDOperationCompleted(object arg) {
            if ((this.GetCampaignByCampaignIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCampaignByCampaignIDCompleted(this, new GetCampaignByCampaignIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteExportedLeads", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteExportedLeads(System.Xml.XmlNode xKeysToDelete, string strCampaignDBConn) {
            this.Invoke("DeleteExportedLeads", new object[] {
                        xKeysToDelete,
                        strCampaignDBConn});
        }
        
        /// <remarks/>
        public void DeleteExportedLeadsAsync(System.Xml.XmlNode xKeysToDelete, string strCampaignDBConn) {
            this.DeleteExportedLeadsAsync(xKeysToDelete, strCampaignDBConn, null);
        }
        
        /// <remarks/>
        public void DeleteExportedLeadsAsync(System.Xml.XmlNode xKeysToDelete, string strCampaignDBConn, object userState) {
            if ((this.DeleteExportedLeadsOperationCompleted == null)) {
                this.DeleteExportedLeadsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteExportedLeadsOperationCompleted);
            }
            this.InvokeAsync("DeleteExportedLeads", new object[] {
                        xKeysToDelete,
                        strCampaignDBConn}, this.DeleteExportedLeadsOperationCompleted, userState);
        }
        
        private void OnDeleteExportedLeadsOperationCompleted(object arg) {
            if ((this.DeleteExportedLeadsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteExportedLeadsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateCallDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateCallDetail(System.Xml.XmlNode xCampaign, System.Xml.XmlNode XCampaignDetails, int callType, long queryId) {
            this.Invoke("UpdateCallDetail", new object[] {
                        xCampaign,
                        XCampaignDetails,
                        callType,
                        queryId});
        }
        
        /// <remarks/>
        public void UpdateCallDetailAsync(System.Xml.XmlNode xCampaign, System.Xml.XmlNode XCampaignDetails, int callType, long queryId) {
            this.UpdateCallDetailAsync(xCampaign, XCampaignDetails, callType, queryId, null);
        }
        
        /// <remarks/>
        public void UpdateCallDetailAsync(System.Xml.XmlNode xCampaign, System.Xml.XmlNode XCampaignDetails, int callType, long queryId, object userState) {
            if ((this.UpdateCallDetailOperationCompleted == null)) {
                this.UpdateCallDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateCallDetailOperationCompleted);
            }
            this.InvokeAsync("UpdateCallDetail", new object[] {
                        xCampaign,
                        XCampaignDetails,
                        callType,
                        queryId}, this.UpdateCallDetailOperationCompleted, userState);
        }
        
        private void OnUpdateCallDetailOperationCompleted(object arg) {
            if ((this.UpdateCallDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateCallDetailCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SetCallHangup", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetCallHangup(long uniqueKey, string strCampaignDbConn) {
            this.Invoke("SetCallHangup", new object[] {
                        uniqueKey,
                        strCampaignDbConn});
        }
        
        /// <remarks/>
        public void SetCallHangupAsync(long uniqueKey, string strCampaignDbConn) {
            this.SetCallHangupAsync(uniqueKey, strCampaignDbConn, null);
        }
        
        /// <remarks/>
        public void SetCallHangupAsync(long uniqueKey, string strCampaignDbConn, object userState) {
            if ((this.SetCallHangupOperationCompleted == null)) {
                this.SetCallHangupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetCallHangupOperationCompleted);
            }
            this.InvokeAsync("SetCallHangup", new object[] {
                        uniqueKey,
                        strCampaignDbConn}, this.SetCallHangupOperationCompleted, userState);
        }
        
        private void OnSetCallHangupOperationCompleted(object arg) {
            if ((this.SetCallHangupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetCallHangupCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IsCallHangup", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsCallHangup(long uniqueKey, string strCampaignDbConn) {
            object[] results = this.Invoke("IsCallHangup", new object[] {
                        uniqueKey,
                        strCampaignDbConn});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsCallHangupAsync(long uniqueKey, string strCampaignDbConn) {
            this.IsCallHangupAsync(uniqueKey, strCampaignDbConn, null);
        }
        
        /// <remarks/>
        public void IsCallHangupAsync(long uniqueKey, string strCampaignDbConn, object userState) {
            if ((this.IsCallHangupOperationCompleted == null)) {
                this.IsCallHangupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsCallHangupOperationCompleted);
            }
            this.InvokeAsync("IsCallHangup", new object[] {
                        uniqueKey,
                        strCampaignDbConn}, this.IsCallHangupOperationCompleted, userState);
        }
        
        private void OnIsCallHangupOperationCompleted(object arg) {
            if ((this.IsCallHangupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsCallHangupCompleted(this, new IsCallHangupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddAgentToCallDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AddAgentToCallDetail(System.Xml.XmlNode xCampaign, System.Xml.XmlNode XCampaignDetails, bool isVerification) {
            this.Invoke("AddAgentToCallDetail", new object[] {
                        xCampaign,
                        XCampaignDetails,
                        isVerification});
        }
        
        /// <remarks/>
        public void AddAgentToCallDetailAsync(System.Xml.XmlNode xCampaign, System.Xml.XmlNode XCampaignDetails, bool isVerification) {
            this.AddAgentToCallDetailAsync(xCampaign, XCampaignDetails, isVerification, null);
        }
        
        /// <remarks/>
        public void AddAgentToCallDetailAsync(System.Xml.XmlNode xCampaign, System.Xml.XmlNode XCampaignDetails, bool isVerification, object userState) {
            if ((this.AddAgentToCallDetailOperationCompleted == null)) {
                this.AddAgentToCallDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddAgentToCallDetailOperationCompleted);
            }
            this.InvokeAsync("AddAgentToCallDetail", new object[] {
                        xCampaign,
                        XCampaignDetails,
                        isVerification}, this.AddAgentToCallDetailOperationCompleted, userState);
        }
        
        private void OnAddAgentToCallDetailOperationCompleted(object arg) {
            if ((this.AddAgentToCallDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddAgentToCallDetailCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddVerificationAgentToCallDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AddVerificationAgentToCallDetail(long Uniquekey, long agentID, string agentName, string strCampaignDBConn) {
            this.Invoke("AddVerificationAgentToCallDetail", new object[] {
                        Uniquekey,
                        agentID,
                        agentName,
                        strCampaignDBConn});
        }
        
        /// <remarks/>
        public void AddVerificationAgentToCallDetailAsync(long Uniquekey, long agentID, string agentName, string strCampaignDBConn) {
            this.AddVerificationAgentToCallDetailAsync(Uniquekey, agentID, agentName, strCampaignDBConn, null);
        }
        
        /// <remarks/>
        public void AddVerificationAgentToCallDetailAsync(long Uniquekey, long agentID, string agentName, string strCampaignDBConn, object userState) {
            if ((this.AddVerificationAgentToCallDetailOperationCompleted == null)) {
                this.AddVerificationAgentToCallDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddVerificationAgentToCallDetailOperationCompleted);
            }
            this.InvokeAsync("AddVerificationAgentToCallDetail", new object[] {
                        Uniquekey,
                        agentID,
                        agentName,
                        strCampaignDBConn}, this.AddVerificationAgentToCallDetailOperationCompleted, userState);
        }
        
        private void OnAddVerificationAgentToCallDetailOperationCompleted(object arg) {
            if ((this.AddVerificationAgentToCallDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddVerificationAgentToCallDetailCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddResultCodeToCallList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AddResultCodeToCallList(string strCampDB, long UniqueKey, string ResultDesc, string offsiteTransferNumber) {
            this.Invoke("AddResultCodeToCallList", new object[] {
                        strCampDB,
                        UniqueKey,
                        ResultDesc,
                        offsiteTransferNumber});
        }
        
        /// <remarks/>
        public void AddResultCodeToCallListAsync(string strCampDB, long UniqueKey, string ResultDesc, string offsiteTransferNumber) {
            this.AddResultCodeToCallListAsync(strCampDB, UniqueKey, ResultDesc, offsiteTransferNumber, null);
        }
        
        /// <remarks/>
        public void AddResultCodeToCallListAsync(string strCampDB, long UniqueKey, string ResultDesc, string offsiteTransferNumber, object userState) {
            if ((this.AddResultCodeToCallListOperationCompleted == null)) {
                this.AddResultCodeToCallListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddResultCodeToCallListOperationCompleted);
            }
            this.InvokeAsync("AddResultCodeToCallList", new object[] {
                        strCampDB,
                        UniqueKey,
                        ResultDesc,
                        offsiteTransferNumber}, this.AddResultCodeToCallListOperationCompleted, userState);
        }
        
        private void OnAddResultCodeToCallListOperationCompleted(object arg) {
            if ((this.AddResultCodeToCallListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddResultCodeToCallListCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetOffsiteTransferNumber", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetOffsiteTransferNumber(string strCampDB, long UniqueKey, string phoneNumber) {
            object[] results = this.Invoke("GetOffsiteTransferNumber", new object[] {
                        strCampDB,
                        UniqueKey,
                        phoneNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetOffsiteTransferNumberAsync(string strCampDB, long UniqueKey, string phoneNumber) {
            this.GetOffsiteTransferNumberAsync(strCampDB, UniqueKey, phoneNumber, null);
        }
        
        /// <remarks/>
        public void GetOffsiteTransferNumberAsync(string strCampDB, long UniqueKey, string phoneNumber, object userState) {
            if ((this.GetOffsiteTransferNumberOperationCompleted == null)) {
                this.GetOffsiteTransferNumberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOffsiteTransferNumberOperationCompleted);
            }
            this.InvokeAsync("GetOffsiteTransferNumber", new object[] {
                        strCampDB,
                        UniqueKey,
                        phoneNumber}, this.GetOffsiteTransferNumberOperationCompleted, userState);
        }
        
        private void OnGetOffsiteTransferNumberOperationCompleted(object arg) {
            if ((this.GetOffsiteTransferNumberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOffsiteTransferNumberCompleted(this, new GetOffsiteTransferNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LogSilentCall", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void LogSilentCall(System.Xml.XmlNode xCampaign, System.Xml.XmlNode XSilentCall) {
            this.Invoke("LogSilentCall", new object[] {
                        xCampaign,
                        XSilentCall});
        }
        
        /// <remarks/>
        public void LogSilentCallAsync(System.Xml.XmlNode xCampaign, System.Xml.XmlNode XSilentCall) {
            this.LogSilentCallAsync(xCampaign, XSilentCall, null);
        }
        
        /// <remarks/>
        public void LogSilentCallAsync(System.Xml.XmlNode xCampaign, System.Xml.XmlNode XSilentCall, object userState) {
            if ((this.LogSilentCallOperationCompleted == null)) {
                this.LogSilentCallOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLogSilentCallOperationCompleted);
            }
            this.InvokeAsync("LogSilentCall", new object[] {
                        xCampaign,
                        XSilentCall}, this.LogSilentCallOperationCompleted, userState);
        }
        
        private void OnLogSilentCallOperationCompleted(object arg) {
            if ((this.LogSilentCallCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LogSilentCallCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateCallCompletion", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateCallCompletion(System.Xml.XmlNode xCampaign, System.Xml.XmlNode XCampaignDetails) {
            this.Invoke("UpdateCallCompletion", new object[] {
                        xCampaign,
                        XCampaignDetails});
        }
        
        /// <remarks/>
        public void UpdateCallCompletionAsync(System.Xml.XmlNode xCampaign, System.Xml.XmlNode XCampaignDetails) {
            this.UpdateCallCompletionAsync(xCampaign, XCampaignDetails, null);
        }
        
        /// <remarks/>
        public void UpdateCallCompletionAsync(System.Xml.XmlNode xCampaign, System.Xml.XmlNode XCampaignDetails, object userState) {
            if ((this.UpdateCallCompletionOperationCompleted == null)) {
                this.UpdateCallCompletionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateCallCompletionOperationCompleted);
            }
            this.InvokeAsync("UpdateCallCompletion", new object[] {
                        xCampaign,
                        XCampaignDetails}, this.UpdateCallCompletionOperationCompleted, userState);
        }
        
        private void OnUpdateCallCompletionOperationCompleted(object arg) {
            if ((this.UpdateCallCompletionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateCallCompletionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateCampaignDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateCampaignDetails(System.Xml.XmlNode xCampaign, string strCampaignDetailsQuery) {
            this.Invoke("UpdateCampaignDetails", new object[] {
                        xCampaign,
                        strCampaignDetailsQuery});
        }
        
        /// <remarks/>
        public void UpdateCampaignDetailsAsync(System.Xml.XmlNode xCampaign, string strCampaignDetailsQuery) {
            this.UpdateCampaignDetailsAsync(xCampaign, strCampaignDetailsQuery, null);
        }
        
        /// <remarks/>
        public void UpdateCampaignDetailsAsync(System.Xml.XmlNode xCampaign, string strCampaignDetailsQuery, object userState) {
            if ((this.UpdateCampaignDetailsOperationCompleted == null)) {
                this.UpdateCampaignDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateCampaignDetailsOperationCompleted);
            }
            this.InvokeAsync("UpdateCampaignDetails", new object[] {
                        xCampaign,
                        strCampaignDetailsQuery}, this.UpdateCampaignDetailsOperationCompleted, userState);
        }
        
        private void OnUpdateCampaignDetailsOperationCompleted(object arg) {
            if ((this.UpdateCampaignDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateCampaignDetailsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCampaignDetailsByKey", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetCampaignDetailsByKey(string CampaignDB, long key, long queryId) {
            object[] results = this.Invoke("GetCampaignDetailsByKey", new object[] {
                        CampaignDB,
                        key,
                        queryId});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetCampaignDetailsByKeyAsync(string CampaignDB, long key, long queryId) {
            this.GetCampaignDetailsByKeyAsync(CampaignDB, key, queryId, null);
        }
        
        /// <remarks/>
        public void GetCampaignDetailsByKeyAsync(string CampaignDB, long key, long queryId, object userState) {
            if ((this.GetCampaignDetailsByKeyOperationCompleted == null)) {
                this.GetCampaignDetailsByKeyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCampaignDetailsByKeyOperationCompleted);
            }
            this.InvokeAsync("GetCampaignDetailsByKey", new object[] {
                        CampaignDB,
                        key,
                        queryId}, this.GetCampaignDetailsByKeyOperationCompleted, userState);
        }
        
        private void OnGetCampaignDetailsByKeyOperationCompleted(object arg) {
            if ((this.GetCampaignDetailsByKeyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCampaignDetailsByKeyCompleted(this, new GetCampaignDetailsByKeyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetManualDailCallDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetManualDailCallDetails(string CampaignDB, long agentID) {
            object[] results = this.Invoke("GetManualDailCallDetails", new object[] {
                        CampaignDB,
                        agentID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetManualDailCallDetailsAsync(string CampaignDB, long agentID) {
            this.GetManualDailCallDetailsAsync(CampaignDB, agentID, null);
        }
        
        /// <remarks/>
        public void GetManualDailCallDetailsAsync(string CampaignDB, long agentID, object userState) {
            if ((this.GetManualDailCallDetailsOperationCompleted == null)) {
                this.GetManualDailCallDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetManualDailCallDetailsOperationCompleted);
            }
            this.InvokeAsync("GetManualDailCallDetails", new object[] {
                        CampaignDB,
                        agentID}, this.GetManualDailCallDetailsOperationCompleted, userState);
        }
        
        private void OnGetManualDailCallDetailsOperationCompleted(object arg) {
            if ((this.GetManualDailCallDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetManualDailCallDetailsCompleted(this, new GetManualDailCallDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetResultCodes", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetResultCodes(System.Xml.XmlNode xCampaign) {
            object[] results = this.Invoke("GetResultCodes", new object[] {
                        xCampaign});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetResultCodesAsync(System.Xml.XmlNode xCampaign) {
            this.GetResultCodesAsync(xCampaign, null);
        }
        
        /// <remarks/>
        public void GetResultCodesAsync(System.Xml.XmlNode xCampaign, object userState) {
            if ((this.GetResultCodesOperationCompleted == null)) {
                this.GetResultCodesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetResultCodesOperationCompleted);
            }
            this.InvokeAsync("GetResultCodes", new object[] {
                        xCampaign}, this.GetResultCodesOperationCompleted, userState);
        }
        
        private void OnGetResultCodesOperationCompleted(object arg) {
            if ((this.GetResultCodesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetResultCodesCompleted(this, new GetResultCodesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ResultCodeInsertUpdate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode ResultCodeInsertUpdate(System.Xml.XmlNode xCampaign, System.Xml.XmlNode xResultCode) {
            object[] results = this.Invoke("ResultCodeInsertUpdate", new object[] {
                        xCampaign,
                        xResultCode});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void ResultCodeInsertUpdateAsync(System.Xml.XmlNode xCampaign, System.Xml.XmlNode xResultCode) {
            this.ResultCodeInsertUpdateAsync(xCampaign, xResultCode, null);
        }
        
        /// <remarks/>
        public void ResultCodeInsertUpdateAsync(System.Xml.XmlNode xCampaign, System.Xml.XmlNode xResultCode, object userState) {
            if ((this.ResultCodeInsertUpdateOperationCompleted == null)) {
                this.ResultCodeInsertUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnResultCodeInsertUpdateOperationCompleted);
            }
            this.InvokeAsync("ResultCodeInsertUpdate", new object[] {
                        xCampaign,
                        xResultCode}, this.ResultCodeInsertUpdateOperationCompleted, userState);
        }
        
        private void OnResultCodeInsertUpdateOperationCompleted(object arg) {
            if ((this.ResultCodeInsertUpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ResultCodeInsertUpdateCompleted(this, new ResultCodeInsertUpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetResultCodeByResultCodeID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetResultCodeByResultCodeID(System.Xml.XmlNode xCampaign, long resultCodeID) {
            object[] results = this.Invoke("GetResultCodeByResultCodeID", new object[] {
                        xCampaign,
                        resultCodeID});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetResultCodeByResultCodeIDAsync(System.Xml.XmlNode xCampaign, long resultCodeID) {
            this.GetResultCodeByResultCodeIDAsync(xCampaign, resultCodeID, null);
        }
        
        /// <remarks/>
        public void GetResultCodeByResultCodeIDAsync(System.Xml.XmlNode xCampaign, long resultCodeID, object userState) {
            if ((this.GetResultCodeByResultCodeIDOperationCompleted == null)) {
                this.GetResultCodeByResultCodeIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetResultCodeByResultCodeIDOperationCompleted);
            }
            this.InvokeAsync("GetResultCodeByResultCodeID", new object[] {
                        xCampaign,
                        resultCodeID}, this.GetResultCodeByResultCodeIDOperationCompleted, userState);
        }
        
        private void OnGetResultCodeByResultCodeIDOperationCompleted(object arg) {
            if ((this.GetResultCodeByResultCodeIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetResultCodeByResultCodeIDCompleted(this, new GetResultCodeByResultCodeIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetOtherParameter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetOtherParameter(System.Xml.XmlNode xCampaign) {
            object[] results = this.Invoke("GetOtherParameter", new object[] {
                        xCampaign});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetOtherParameterAsync(System.Xml.XmlNode xCampaign) {
            this.GetOtherParameterAsync(xCampaign, null);
        }
        
        /// <remarks/>
        public void GetOtherParameterAsync(System.Xml.XmlNode xCampaign, object userState) {
            if ((this.GetOtherParameterOperationCompleted == null)) {
                this.GetOtherParameterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOtherParameterOperationCompleted);
            }
            this.InvokeAsync("GetOtherParameter", new object[] {
                        xCampaign}, this.GetOtherParameterOperationCompleted, userState);
        }
        
        private void OnGetOtherParameterOperationCompleted(object arg) {
            if ((this.GetOtherParameterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOtherParameterCompleted(this, new GetOtherParameterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/OtherParameterInsertUpdate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode OtherParameterInsertUpdate(System.Xml.XmlNode xCampaign, System.Xml.XmlNode xOtherParams) {
            object[] results = this.Invoke("OtherParameterInsertUpdate", new object[] {
                        xCampaign,
                        xOtherParams});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void OtherParameterInsertUpdateAsync(System.Xml.XmlNode xCampaign, System.Xml.XmlNode xOtherParams) {
            this.OtherParameterInsertUpdateAsync(xCampaign, xOtherParams, null);
        }
        
        /// <remarks/>
        public void OtherParameterInsertUpdateAsync(System.Xml.XmlNode xCampaign, System.Xml.XmlNode xOtherParams, object userState) {
            if ((this.OtherParameterInsertUpdateOperationCompleted == null)) {
                this.OtherParameterInsertUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnOtherParameterInsertUpdateOperationCompleted);
            }
            this.InvokeAsync("OtherParameterInsertUpdate", new object[] {
                        xCampaign,
                        xOtherParams}, this.OtherParameterInsertUpdateOperationCompleted, userState);
        }
        
        private void OnOtherParameterInsertUpdateOperationCompleted(object arg) {
            if ((this.OtherParameterInsertUpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.OtherParameterInsertUpdateCompleted(this, new OtherParameterInsertUpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDialingParameter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetDialingParameter(System.Xml.XmlNode xCampaign) {
            object[] results = this.Invoke("GetDialingParameter", new object[] {
                        xCampaign});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetDialingParameterAsync(System.Xml.XmlNode xCampaign) {
            this.GetDialingParameterAsync(xCampaign, null);
        }
        
        /// <remarks/>
        public void GetDialingParameterAsync(System.Xml.XmlNode xCampaign, object userState) {
            if ((this.GetDialingParameterOperationCompleted == null)) {
                this.GetDialingParameterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDialingParameterOperationCompleted);
            }
            this.InvokeAsync("GetDialingParameter", new object[] {
                        xCampaign}, this.GetDialingParameterOperationCompleted, userState);
        }
        
        private void OnGetDialingParameterOperationCompleted(object arg) {
            if ((this.GetDialingParameterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDialingParameterCompleted(this, new GetDialingParameterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DialingParameterInsertUpdate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode DialingParameterInsertUpdate(System.Xml.XmlNode xCampaign, System.Xml.XmlNode xDialParams) {
            object[] results = this.Invoke("DialingParameterInsertUpdate", new object[] {
                        xCampaign,
                        xDialParams});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void DialingParameterInsertUpdateAsync(System.Xml.XmlNode xCampaign, System.Xml.XmlNode xDialParams) {
            this.DialingParameterInsertUpdateAsync(xCampaign, xDialParams, null);
        }
        
        /// <remarks/>
        public void DialingParameterInsertUpdateAsync(System.Xml.XmlNode xCampaign, System.Xml.XmlNode xDialParams, object userState) {
            if ((this.DialingParameterInsertUpdateOperationCompleted == null)) {
                this.DialingParameterInsertUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDialingParameterInsertUpdateOperationCompleted);
            }
            this.InvokeAsync("DialingParameterInsertUpdate", new object[] {
                        xCampaign,
                        xDialParams}, this.DialingParameterInsertUpdateOperationCompleted, userState);
        }
        
        private void OnDialingParameterInsertUpdateOperationCompleted(object arg) {
            if ((this.DialingParameterInsertUpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DialingParameterInsertUpdateCompleted(this, new DialingParameterInsertUpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertDialerActivity", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long InsertDialerActivity(System.DateTime dtConnectTime) {
            object[] results = this.Invoke("InsertDialerActivity", new object[] {
                        dtConnectTime});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void InsertDialerActivityAsync(System.DateTime dtConnectTime) {
            this.InsertDialerActivityAsync(dtConnectTime, null);
        }
        
        /// <remarks/>
        public void InsertDialerActivityAsync(System.DateTime dtConnectTime, object userState) {
            if ((this.InsertDialerActivityOperationCompleted == null)) {
                this.InsertDialerActivityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertDialerActivityOperationCompleted);
            }
            this.InvokeAsync("InsertDialerActivity", new object[] {
                        dtConnectTime}, this.InsertDialerActivityOperationCompleted, userState);
        }
        
        private void OnInsertDialerActivityOperationCompleted(object arg) {
            if ((this.InsertDialerActivityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertDialerActivityCompleted(this, new InsertDialerActivityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateDialerStart", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateDialerStart(long lDialerActivityID, System.DateTime dtDialerStartTime) {
            this.Invoke("UpdateDialerStart", new object[] {
                        lDialerActivityID,
                        dtDialerStartTime});
        }
        
        /// <remarks/>
        public void UpdateDialerStartAsync(long lDialerActivityID, System.DateTime dtDialerStartTime) {
            this.UpdateDialerStartAsync(lDialerActivityID, dtDialerStartTime, null);
        }
        
        /// <remarks/>
        public void UpdateDialerStartAsync(long lDialerActivityID, System.DateTime dtDialerStartTime, object userState) {
            if ((this.UpdateDialerStartOperationCompleted == null)) {
                this.UpdateDialerStartOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateDialerStartOperationCompleted);
            }
            this.InvokeAsync("UpdateDialerStart", new object[] {
                        lDialerActivityID,
                        dtDialerStartTime}, this.UpdateDialerStartOperationCompleted, userState);
        }
        
        private void OnUpdateDialerStartOperationCompleted(object arg) {
            if ((this.UpdateDialerStartCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateDialerStartCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateDialerStop", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateDialerStop(long lDialerActivityID, System.DateTime dtDialerStopTime) {
            this.Invoke("UpdateDialerStop", new object[] {
                        lDialerActivityID,
                        dtDialerStopTime});
        }
        
        /// <remarks/>
        public void UpdateDialerStopAsync(long lDialerActivityID, System.DateTime dtDialerStopTime) {
            this.UpdateDialerStopAsync(lDialerActivityID, dtDialerStopTime, null);
        }
        
        /// <remarks/>
        public void UpdateDialerStopAsync(long lDialerActivityID, System.DateTime dtDialerStopTime, object userState) {
            if ((this.UpdateDialerStopOperationCompleted == null)) {
                this.UpdateDialerStopOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateDialerStopOperationCompleted);
            }
            this.InvokeAsync("UpdateDialerStop", new object[] {
                        lDialerActivityID,
                        dtDialerStopTime}, this.UpdateDialerStopOperationCompleted, userState);
        }
        
        private void OnUpdateDialerStopOperationCompleted(object arg) {
            if ((this.UpdateDialerStopCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateDialerStopCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDigitalizedRecording", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetDigitalizedRecording(System.Xml.XmlNode xCampaign) {
            object[] results = this.Invoke("GetDigitalizedRecording", new object[] {
                        xCampaign});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetDigitalizedRecordingAsync(System.Xml.XmlNode xCampaign) {
            this.GetDigitalizedRecordingAsync(xCampaign, null);
        }
        
        /// <remarks/>
        public void GetDigitalizedRecordingAsync(System.Xml.XmlNode xCampaign, object userState) {
            if ((this.GetDigitalizedRecordingOperationCompleted == null)) {
                this.GetDigitalizedRecordingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDigitalizedRecordingOperationCompleted);
            }
            this.InvokeAsync("GetDigitalizedRecording", new object[] {
                        xCampaign}, this.GetDigitalizedRecordingOperationCompleted, userState);
        }
        
        private void OnGetDigitalizedRecordingOperationCompleted(object arg) {
            if ((this.GetDigitalizedRecordingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDigitalizedRecordingCompleted(this, new GetDigitalizedRecordingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DigitalizedRecordingInsertUpdate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode DigitalizedRecordingInsertUpdate(System.Xml.XmlNode xCampaign, System.Xml.XmlNode xDigitalRec) {
            object[] results = this.Invoke("DigitalizedRecordingInsertUpdate", new object[] {
                        xCampaign,
                        xDigitalRec});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void DigitalizedRecordingInsertUpdateAsync(System.Xml.XmlNode xCampaign, System.Xml.XmlNode xDigitalRec) {
            this.DigitalizedRecordingInsertUpdateAsync(xCampaign, xDigitalRec, null);
        }
        
        /// <remarks/>
        public void DigitalizedRecordingInsertUpdateAsync(System.Xml.XmlNode xCampaign, System.Xml.XmlNode xDigitalRec, object userState) {
            if ((this.DigitalizedRecordingInsertUpdateOperationCompleted == null)) {
                this.DigitalizedRecordingInsertUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDigitalizedRecordingInsertUpdateOperationCompleted);
            }
            this.InvokeAsync("DigitalizedRecordingInsertUpdate", new object[] {
                        xCampaign,
                        xDigitalRec}, this.DigitalizedRecordingInsertUpdateOperationCompleted, userState);
        }
        
        private void OnDigitalizedRecordingInsertUpdateOperationCompleted(object arg) {
            if ((this.DigitalizedRecordingInsertUpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DigitalizedRecordingInsertUpdateCompleted(this, new DigitalizedRecordingInsertUpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCampaignQueryStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetCampaignQueryStatus(System.Xml.XmlNode xCampaign) {
            object[] results = this.Invoke("GetCampaignQueryStatus", new object[] {
                        xCampaign});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetCampaignQueryStatusAsync(System.Xml.XmlNode xCampaign) {
            this.GetCampaignQueryStatusAsync(xCampaign, null);
        }
        
        /// <remarks/>
        public void GetCampaignQueryStatusAsync(System.Xml.XmlNode xCampaign, object userState) {
            if ((this.GetCampaignQueryStatusOperationCompleted == null)) {
                this.GetCampaignQueryStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCampaignQueryStatusOperationCompleted);
            }
            this.InvokeAsync("GetCampaignQueryStatus", new object[] {
                        xCampaign}, this.GetCampaignQueryStatusOperationCompleted, userState);
        }
        
        private void OnGetCampaignQueryStatusOperationCompleted(object arg) {
            if ((this.GetCampaignQueryStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCampaignQueryStatusCompleted(this, new GetCampaignQueryStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateQueryStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateQueryStatus(System.Xml.XmlNode xCampaign, string strQueryCondition, System.Xml.XmlNode xCampaignQueryStatus) {
            this.Invoke("UpdateQueryStatus", new object[] {
                        xCampaign,
                        strQueryCondition,
                        xCampaignQueryStatus});
        }
        
        /// <remarks/>
        public void UpdateQueryStatusAsync(System.Xml.XmlNode xCampaign, string strQueryCondition, System.Xml.XmlNode xCampaignQueryStatus) {
            this.UpdateQueryStatusAsync(xCampaign, strQueryCondition, xCampaignQueryStatus, null);
        }
        
        /// <remarks/>
        public void UpdateQueryStatusAsync(System.Xml.XmlNode xCampaign, string strQueryCondition, System.Xml.XmlNode xCampaignQueryStatus, object userState) {
            if ((this.UpdateQueryStatusOperationCompleted == null)) {
                this.UpdateQueryStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateQueryStatusOperationCompleted);
            }
            this.InvokeAsync("UpdateQueryStatus", new object[] {
                        xCampaign,
                        strQueryCondition,
                        xCampaignQueryStatus}, this.UpdateQueryStatusOperationCompleted, userState);
        }
        
        private void OnUpdateQueryStatusOperationCompleted(object arg) {
            if ((this.UpdateQueryStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateQueryStatusCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PrepareDialerQuery", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string PrepareDialerQuery(System.Xml.XmlNode xCampaign, string strQueryCondition, long queryId) {
            object[] results = this.Invoke("PrepareDialerQuery", new object[] {
                        xCampaign,
                        strQueryCondition,
                        queryId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void PrepareDialerQueryAsync(System.Xml.XmlNode xCampaign, string strQueryCondition, long queryId) {
            this.PrepareDialerQueryAsync(xCampaign, strQueryCondition, queryId, null);
        }
        
        /// <remarks/>
        public void PrepareDialerQueryAsync(System.Xml.XmlNode xCampaign, string strQueryCondition, long queryId, object userState) {
            if ((this.PrepareDialerQueryOperationCompleted == null)) {
                this.PrepareDialerQueryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPrepareDialerQueryOperationCompleted);
            }
            this.InvokeAsync("PrepareDialerQuery", new object[] {
                        xCampaign,
                        strQueryCondition,
                        queryId}, this.PrepareDialerQueryOperationCompleted, userState);
        }
        
        private void OnPrepareDialerQueryOperationCompleted(object arg) {
            if ((this.PrepareDialerQueryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PrepareDialerQueryCompleted(this, new PrepareDialerQueryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CampaignQueryStatusUpdate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CampaignQueryStatusUpdate(System.Xml.XmlNode xCampaign, long campaignQueryID, bool isActive, bool isStandby, bool showMessage, bool resetStats) {
            this.Invoke("CampaignQueryStatusUpdate", new object[] {
                        xCampaign,
                        campaignQueryID,
                        isActive,
                        isStandby,
                        showMessage,
                        resetStats});
        }
        
        /// <remarks/>
        public void CampaignQueryStatusUpdateAsync(System.Xml.XmlNode xCampaign, long campaignQueryID, bool isActive, bool isStandby, bool showMessage, bool resetStats) {
            this.CampaignQueryStatusUpdateAsync(xCampaign, campaignQueryID, isActive, isStandby, showMessage, resetStats, null);
        }
        
        /// <remarks/>
        public void CampaignQueryStatusUpdateAsync(System.Xml.XmlNode xCampaign, long campaignQueryID, bool isActive, bool isStandby, bool showMessage, bool resetStats, object userState) {
            if ((this.CampaignQueryStatusUpdateOperationCompleted == null)) {
                this.CampaignQueryStatusUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCampaignQueryStatusUpdateOperationCompleted);
            }
            this.InvokeAsync("CampaignQueryStatusUpdate", new object[] {
                        xCampaign,
                        campaignQueryID,
                        isActive,
                        isStandby,
                        showMessage,
                        resetStats}, this.CampaignQueryStatusUpdateOperationCompleted, userState);
        }
        
        private void OnCampaignQueryStatusUpdateOperationCompleted(object arg) {
            if ((this.CampaignQueryStatusUpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CampaignQueryStatusUpdateCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CampaignQueryStatusUpdateDialer", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CampaignQueryStatusUpdateDialer(System.Xml.XmlNode xCampaign, long queryID, bool isActive, bool isStandby) {
            this.Invoke("CampaignQueryStatusUpdateDialer", new object[] {
                        xCampaign,
                        queryID,
                        isActive,
                        isStandby});
        }
        
        /// <remarks/>
        public void CampaignQueryStatusUpdateDialerAsync(System.Xml.XmlNode xCampaign, long queryID, bool isActive, bool isStandby) {
            this.CampaignQueryStatusUpdateDialerAsync(xCampaign, queryID, isActive, isStandby, null);
        }
        
        /// <remarks/>
        public void CampaignQueryStatusUpdateDialerAsync(System.Xml.XmlNode xCampaign, long queryID, bool isActive, bool isStandby, object userState) {
            if ((this.CampaignQueryStatusUpdateDialerOperationCompleted == null)) {
                this.CampaignQueryStatusUpdateDialerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCampaignQueryStatusUpdateDialerOperationCompleted);
            }
            this.InvokeAsync("CampaignQueryStatusUpdateDialer", new object[] {
                        xCampaign,
                        queryID,
                        isActive,
                        isStandby}, this.CampaignQueryStatusUpdateDialerOperationCompleted, userState);
        }
        
        private void OnCampaignQueryStatusUpdateDialerOperationCompleted(object arg) {
            if ((this.CampaignQueryStatusUpdateDialerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CampaignQueryStatusUpdateDialerCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CampaignQueryComplete", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CampaignQueryComplete(System.Xml.XmlNode xCampaign, long QueryID, bool isActive, bool showMessage) {
            this.Invoke("CampaignQueryComplete", new object[] {
                        xCampaign,
                        QueryID,
                        isActive,
                        showMessage});
        }
        
        /// <remarks/>
        public void CampaignQueryCompleteAsync(System.Xml.XmlNode xCampaign, long QueryID, bool isActive, bool showMessage) {
            this.CampaignQueryCompleteAsync(xCampaign, QueryID, isActive, showMessage, null);
        }
        
        /// <remarks/>
        public void CampaignQueryCompleteAsync(System.Xml.XmlNode xCampaign, long QueryID, bool isActive, bool showMessage, object userState) {
            if ((this.CampaignQueryCompleteOperationCompleted == null)) {
                this.CampaignQueryCompleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCampaignQueryCompleteOperationCompleted);
            }
            this.InvokeAsync("CampaignQueryComplete", new object[] {
                        xCampaign,
                        QueryID,
                        isActive,
                        showMessage}, this.CampaignQueryCompleteOperationCompleted, userState);
        }
        
        private void OnCampaignQueryCompleteOperationCompleted(object arg) {
            if ((this.CampaignQueryCompleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CampaignQueryCompleteCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateCampaignQueryStats", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateCampaignQueryStats(System.Xml.XmlNode xCampaign, System.Xml.XmlNode xCampaignQueryStatus) {
            this.Invoke("UpdateCampaignQueryStats", new object[] {
                        xCampaign,
                        xCampaignQueryStatus});
        }
        
        /// <remarks/>
        public void UpdateCampaignQueryStatsAsync(System.Xml.XmlNode xCampaign, System.Xml.XmlNode xCampaignQueryStatus) {
            this.UpdateCampaignQueryStatsAsync(xCampaign, xCampaignQueryStatus, null);
        }
        
        /// <remarks/>
        public void UpdateCampaignQueryStatsAsync(System.Xml.XmlNode xCampaign, System.Xml.XmlNode xCampaignQueryStatus, object userState) {
            if ((this.UpdateCampaignQueryStatsOperationCompleted == null)) {
                this.UpdateCampaignQueryStatsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateCampaignQueryStatsOperationCompleted);
            }
            this.InvokeAsync("UpdateCampaignQueryStats", new object[] {
                        xCampaign,
                        xCampaignQueryStatus}, this.UpdateCampaignQueryStatsOperationCompleted, userState);
        }
        
        private void OnUpdateCampaignQueryStatsOperationCompleted(object arg) {
            if ((this.UpdateCampaignQueryStatsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateCampaignQueryStatsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateCampaignQueryInDialerQueue", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateCampaignQueryInDialerQueue(long queryId, string campaignDBConnString) {
            this.Invoke("UpdateCampaignQueryInDialerQueue", new object[] {
                        queryId,
                        campaignDBConnString});
        }
        
        /// <remarks/>
        public void UpdateCampaignQueryInDialerQueueAsync(long queryId, string campaignDBConnString) {
            this.UpdateCampaignQueryInDialerQueueAsync(queryId, campaignDBConnString, null);
        }
        
        /// <remarks/>
        public void UpdateCampaignQueryInDialerQueueAsync(long queryId, string campaignDBConnString, object userState) {
            if ((this.UpdateCampaignQueryInDialerQueueOperationCompleted == null)) {
                this.UpdateCampaignQueryInDialerQueueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateCampaignQueryInDialerQueueOperationCompleted);
            }
            this.InvokeAsync("UpdateCampaignQueryInDialerQueue", new object[] {
                        queryId,
                        campaignDBConnString}, this.UpdateCampaignQueryInDialerQueueOperationCompleted, userState);
        }
        
        private void OnUpdateCampaignQueryInDialerQueueOperationCompleted(object arg) {
            if ((this.UpdateCampaignQueryInDialerQueueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateCampaignQueryInDialerQueueCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ClearQueryStats", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ClearQueryStats(string strDBConn, string strQueryCondition, System.Xml.XmlNode xCampaignQueryStatus) {
            this.Invoke("ClearQueryStats", new object[] {
                        strDBConn,
                        strQueryCondition,
                        xCampaignQueryStatus});
        }
        
        /// <remarks/>
        public void ClearQueryStatsAsync(string strDBConn, string strQueryCondition, System.Xml.XmlNode xCampaignQueryStatus) {
            this.ClearQueryStatsAsync(strDBConn, strQueryCondition, xCampaignQueryStatus, null);
        }
        
        /// <remarks/>
        public void ClearQueryStatsAsync(string strDBConn, string strQueryCondition, System.Xml.XmlNode xCampaignQueryStatus, object userState) {
            if ((this.ClearQueryStatsOperationCompleted == null)) {
                this.ClearQueryStatsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnClearQueryStatsOperationCompleted);
            }
            this.InvokeAsync("ClearQueryStats", new object[] {
                        strDBConn,
                        strQueryCondition,
                        xCampaignQueryStatus}, this.ClearQueryStatsOperationCompleted, userState);
        }
        
        private void OnClearQueryStatsOperationCompleted(object arg) {
            if ((this.ClearQueryStatsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ClearQueryStatsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetScriptList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetScriptList(System.Xml.XmlNode xCampaign) {
            object[] results = this.Invoke("GetScriptList", new object[] {
                        xCampaign});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetScriptListAsync(System.Xml.XmlNode xCampaign) {
            this.GetScriptListAsync(xCampaign, null);
        }
        
        /// <remarks/>
        public void GetScriptListAsync(System.Xml.XmlNode xCampaign, object userState) {
            if ((this.GetScriptListOperationCompleted == null)) {
                this.GetScriptListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetScriptListOperationCompleted);
            }
            this.InvokeAsync("GetScriptList", new object[] {
                        xCampaign}, this.GetScriptListOperationCompleted, userState);
        }
        
        private void OnGetScriptListOperationCompleted(object arg) {
            if ((this.GetScriptListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetScriptListCompleted(this, new GetScriptListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPageListByScriptId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetPageListByScriptId(System.Xml.XmlNode xCampaign, long parentScriptId) {
            object[] results = this.Invoke("GetPageListByScriptId", new object[] {
                        xCampaign,
                        parentScriptId});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetPageListByScriptIdAsync(System.Xml.XmlNode xCampaign, long parentScriptId) {
            this.GetPageListByScriptIdAsync(xCampaign, parentScriptId, null);
        }
        
        /// <remarks/>
        public void GetPageListByScriptIdAsync(System.Xml.XmlNode xCampaign, long parentScriptId, object userState) {
            if ((this.GetPageListByScriptIdOperationCompleted == null)) {
                this.GetPageListByScriptIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPageListByScriptIdOperationCompleted);
            }
            this.InvokeAsync("GetPageListByScriptId", new object[] {
                        xCampaign,
                        parentScriptId}, this.GetPageListByScriptIdOperationCompleted, userState);
        }
        
        private void OnGetPageListByScriptIdOperationCompleted(object arg) {
            if ((this.GetPageListByScriptIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPageListByScriptIdCompleted(this, new GetPageListByScriptIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetScriptByScriptID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetScriptByScriptID(System.Xml.XmlNode xCampaign, long scriptID) {
            object[] results = this.Invoke("GetScriptByScriptID", new object[] {
                        xCampaign,
                        scriptID});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetScriptByScriptIDAsync(System.Xml.XmlNode xCampaign, long scriptID) {
            this.GetScriptByScriptIDAsync(xCampaign, scriptID, null);
        }
        
        /// <remarks/>
        public void GetScriptByScriptIDAsync(System.Xml.XmlNode xCampaign, long scriptID, object userState) {
            if ((this.GetScriptByScriptIDOperationCompleted == null)) {
                this.GetScriptByScriptIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetScriptByScriptIDOperationCompleted);
            }
            this.InvokeAsync("GetScriptByScriptID", new object[] {
                        xCampaign,
                        scriptID}, this.GetScriptByScriptIDOperationCompleted, userState);
        }
        
        private void OnGetScriptByScriptIDOperationCompleted(object arg) {
            if ((this.GetScriptByScriptIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetScriptByScriptIDCompleted(this, new GetScriptByScriptIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetScriptByScriptGUID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetScriptByScriptGUID(System.Xml.XmlNode xCampaign, string scriptGUID) {
            object[] results = this.Invoke("GetScriptByScriptGUID", new object[] {
                        xCampaign,
                        scriptGUID});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetScriptByScriptGUIDAsync(System.Xml.XmlNode xCampaign, string scriptGUID) {
            this.GetScriptByScriptGUIDAsync(xCampaign, scriptGUID, null);
        }
        
        /// <remarks/>
        public void GetScriptByScriptGUIDAsync(System.Xml.XmlNode xCampaign, string scriptGUID, object userState) {
            if ((this.GetScriptByScriptGUIDOperationCompleted == null)) {
                this.GetScriptByScriptGUIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetScriptByScriptGUIDOperationCompleted);
            }
            this.InvokeAsync("GetScriptByScriptGUID", new object[] {
                        xCampaign,
                        scriptGUID}, this.GetScriptByScriptGUIDOperationCompleted, userState);
        }
        
        private void OnGetScriptByScriptGUIDOperationCompleted(object arg) {
            if ((this.GetScriptByScriptGUIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetScriptByScriptGUIDCompleted(this, new GetScriptByScriptGUIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CloneScript", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CloneScript(string campDbString, long scriptId, string scriptName, string cloneCampaignDB) {
            object[] results = this.Invoke("CloneScript", new object[] {
                        campDbString,
                        scriptId,
                        scriptName,
                        cloneCampaignDB});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CloneScriptAsync(string campDbString, long scriptId, string scriptName, string cloneCampaignDB) {
            this.CloneScriptAsync(campDbString, scriptId, scriptName, cloneCampaignDB, null);
        }
        
        /// <remarks/>
        public void CloneScriptAsync(string campDbString, long scriptId, string scriptName, string cloneCampaignDB, object userState) {
            if ((this.CloneScriptOperationCompleted == null)) {
                this.CloneScriptOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCloneScriptOperationCompleted);
            }
            this.InvokeAsync("CloneScript", new object[] {
                        campDbString,
                        scriptId,
                        scriptName,
                        cloneCampaignDB}, this.CloneScriptOperationCompleted, userState);
        }
        
        private void OnCloneScriptOperationCompleted(object arg) {
            if ((this.CloneScriptCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CloneScriptCompleted(this, new CloneScriptCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ScriptInsertUpdate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode ScriptInsertUpdate(System.Xml.XmlNode xCampaign, System.Xml.XmlNode xScript) {
            object[] results = this.Invoke("ScriptInsertUpdate", new object[] {
                        xCampaign,
                        xScript});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void ScriptInsertUpdateAsync(System.Xml.XmlNode xCampaign, System.Xml.XmlNode xScript) {
            this.ScriptInsertUpdateAsync(xCampaign, xScript, null);
        }
        
        /// <remarks/>
        public void ScriptInsertUpdateAsync(System.Xml.XmlNode xCampaign, System.Xml.XmlNode xScript, object userState) {
            if ((this.ScriptInsertUpdateOperationCompleted == null)) {
                this.ScriptInsertUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnScriptInsertUpdateOperationCompleted);
            }
            this.InvokeAsync("ScriptInsertUpdate", new object[] {
                        xCampaign,
                        xScript}, this.ScriptInsertUpdateOperationCompleted, userState);
        }
        
        private void OnScriptInsertUpdateOperationCompleted(object arg) {
            if ((this.ScriptInsertUpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ScriptInsertUpdateCompleted(this, new ScriptInsertUpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteScript", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteScript(System.Xml.XmlNode xCampaign, long scriptID) {
            object[] results = this.Invoke("DeleteScript", new object[] {
                        xCampaign,
                        scriptID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteScriptAsync(System.Xml.XmlNode xCampaign, long scriptID) {
            this.DeleteScriptAsync(xCampaign, scriptID, null);
        }
        
        /// <remarks/>
        public void DeleteScriptAsync(System.Xml.XmlNode xCampaign, long scriptID, object userState) {
            if ((this.DeleteScriptOperationCompleted == null)) {
                this.DeleteScriptOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteScriptOperationCompleted);
            }
            this.InvokeAsync("DeleteScript", new object[] {
                        xCampaign,
                        scriptID}, this.DeleteScriptOperationCompleted, userState);
        }
        
        private void OnDeleteScriptOperationCompleted(object arg) {
            if ((this.DeleteScriptCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteScriptCompleted(this, new DeleteScriptCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/QueryDetailInsertUpdate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode QueryDetailInsertUpdate(System.Xml.XmlNode xCampaign, System.Xml.XmlNode[] xQueryDetail, System.Xml.XmlNode xQuery) {
            object[] results = this.Invoke("QueryDetailInsertUpdate", new object[] {
                        xCampaign,
                        xQueryDetail,
                        xQuery});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void QueryDetailInsertUpdateAsync(System.Xml.XmlNode xCampaign, System.Xml.XmlNode[] xQueryDetail, System.Xml.XmlNode xQuery) {
            this.QueryDetailInsertUpdateAsync(xCampaign, xQueryDetail, xQuery, null);
        }
        
        /// <remarks/>
        public void QueryDetailInsertUpdateAsync(System.Xml.XmlNode xCampaign, System.Xml.XmlNode[] xQueryDetail, System.Xml.XmlNode xQuery, object userState) {
            if ((this.QueryDetailInsertUpdateOperationCompleted == null)) {
                this.QueryDetailInsertUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryDetailInsertUpdateOperationCompleted);
            }
            this.InvokeAsync("QueryDetailInsertUpdate", new object[] {
                        xCampaign,
                        xQueryDetail,
                        xQuery}, this.QueryDetailInsertUpdateOperationCompleted, userState);
        }
        
        private void OnQueryDetailInsertUpdateOperationCompleted(object arg) {
            if ((this.QueryDetailInsertUpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryDetailInsertUpdateCompleted(this, new QueryDetailInsertUpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetQueryList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetQueryList(System.Xml.XmlNode xCampaign) {
            object[] results = this.Invoke("GetQueryList", new object[] {
                        xCampaign});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetQueryListAsync(System.Xml.XmlNode xCampaign) {
            this.GetQueryListAsync(xCampaign, null);
        }
        
        /// <remarks/>
        public void GetQueryListAsync(System.Xml.XmlNode xCampaign, object userState) {
            if ((this.GetQueryListOperationCompleted == null)) {
                this.GetQueryListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetQueryListOperationCompleted);
            }
            this.InvokeAsync("GetQueryList", new object[] {
                        xCampaign}, this.GetQueryListOperationCompleted, userState);
        }
        
        private void OnGetQueryListOperationCompleted(object arg) {
            if ((this.GetQueryListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetQueryListCompleted(this, new GetQueryListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetActiveQueryList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetActiveQueryList(System.Xml.XmlNode xCampaign) {
            object[] results = this.Invoke("GetActiveQueryList", new object[] {
                        xCampaign});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetActiveQueryListAsync(System.Xml.XmlNode xCampaign) {
            this.GetActiveQueryListAsync(xCampaign, null);
        }
        
        /// <remarks/>
        public void GetActiveQueryListAsync(System.Xml.XmlNode xCampaign, object userState) {
            if ((this.GetActiveQueryListOperationCompleted == null)) {
                this.GetActiveQueryListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetActiveQueryListOperationCompleted);
            }
            this.InvokeAsync("GetActiveQueryList", new object[] {
                        xCampaign}, this.GetActiveQueryListOperationCompleted, userState);
        }
        
        private void OnGetActiveQueryListOperationCompleted(object arg) {
            if ((this.GetActiveQueryListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetActiveQueryListCompleted(this, new GetActiveQueryListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetStandbyQueryList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetStandbyQueryList(System.Xml.XmlNode xCampaign) {
            object[] results = this.Invoke("GetStandbyQueryList", new object[] {
                        xCampaign});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetStandbyQueryListAsync(System.Xml.XmlNode xCampaign) {
            this.GetStandbyQueryListAsync(xCampaign, null);
        }
        
        /// <remarks/>
        public void GetStandbyQueryListAsync(System.Xml.XmlNode xCampaign, object userState) {
            if ((this.GetStandbyQueryListOperationCompleted == null)) {
                this.GetStandbyQueryListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStandbyQueryListOperationCompleted);
            }
            this.InvokeAsync("GetStandbyQueryList", new object[] {
                        xCampaign}, this.GetStandbyQueryListOperationCompleted, userState);
        }
        
        private void OnGetStandbyQueryListOperationCompleted(object arg) {
            if ((this.GetStandbyQueryListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStandbyQueryListCompleted(this, new GetStandbyQueryListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCampaignData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetCampaignData(string strCampaignDBConn, string strQueryCondition) {
            object[] results = this.Invoke("GetCampaignData", new object[] {
                        strCampaignDBConn,
                        strQueryCondition});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetCampaignDataAsync(string strCampaignDBConn, string strQueryCondition) {
            this.GetCampaignDataAsync(strCampaignDBConn, strQueryCondition, null);
        }
        
        /// <remarks/>
        public void GetCampaignDataAsync(string strCampaignDBConn, string strQueryCondition, object userState) {
            if ((this.GetCampaignDataOperationCompleted == null)) {
                this.GetCampaignDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCampaignDataOperationCompleted);
            }
            this.InvokeAsync("GetCampaignData", new object[] {
                        strCampaignDBConn,
                        strQueryCondition}, this.GetCampaignDataOperationCompleted, userState);
        }
        
        private void OnGetCampaignDataOperationCompleted(object arg) {
            if ((this.GetCampaignDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCampaignDataCompleted(this, new GetCampaignDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCampaignData_Recycle_Last", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetCampaignData_Recycle_Last(string strCampaignDBConn, string strQueryCondition, long queryId) {
            object[] results = this.Invoke("GetCampaignData_Recycle_Last", new object[] {
                        strCampaignDBConn,
                        strQueryCondition,
                        queryId});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetCampaignData_Recycle_LastAsync(string strCampaignDBConn, string strQueryCondition, long queryId) {
            this.GetCampaignData_Recycle_LastAsync(strCampaignDBConn, strQueryCondition, queryId, null);
        }
        
        /// <remarks/>
        public void GetCampaignData_Recycle_LastAsync(string strCampaignDBConn, string strQueryCondition, long queryId, object userState) {
            if ((this.GetCampaignData_Recycle_LastOperationCompleted == null)) {
                this.GetCampaignData_Recycle_LastOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCampaignData_Recycle_LastOperationCompleted);
            }
            this.InvokeAsync("GetCampaignData_Recycle_Last", new object[] {
                        strCampaignDBConn,
                        strQueryCondition,
                        queryId}, this.GetCampaignData_Recycle_LastOperationCompleted, userState);
        }
        
        private void OnGetCampaignData_Recycle_LastOperationCompleted(object arg) {
            if ((this.GetCampaignData_Recycle_LastCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCampaignData_Recycle_LastCompleted(this, new GetCampaignData_Recycle_LastCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IsNeverCallSet", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsNeverCallSet(string strCampaignDBConn, long uniqueKey) {
            object[] results = this.Invoke("IsNeverCallSet", new object[] {
                        strCampaignDBConn,
                        uniqueKey});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsNeverCallSetAsync(string strCampaignDBConn, long uniqueKey) {
            this.IsNeverCallSetAsync(strCampaignDBConn, uniqueKey, null);
        }
        
        /// <remarks/>
        public void IsNeverCallSetAsync(string strCampaignDBConn, long uniqueKey, object userState) {
            if ((this.IsNeverCallSetOperationCompleted == null)) {
                this.IsNeverCallSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsNeverCallSetOperationCompleted);
            }
            this.InvokeAsync("IsNeverCallSet", new object[] {
                        strCampaignDBConn,
                        uniqueKey}, this.IsNeverCallSetOperationCompleted, userState);
        }
        
        private void OnIsNeverCallSetOperationCompleted(object arg) {
            if ((this.IsNeverCallSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsNeverCallSetCompleted(this, new IsNeverCallSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateAvailableCountToQuery", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateAvailableCountToQuery(string strCampaignDBConn, int availableCount, System.Xml.XmlNode xQuery) {
            this.Invoke("UpdateAvailableCountToQuery", new object[] {
                        strCampaignDBConn,
                        availableCount,
                        xQuery});
        }
        
        /// <remarks/>
        public void UpdateAvailableCountToQueryAsync(string strCampaignDBConn, int availableCount, System.Xml.XmlNode xQuery) {
            this.UpdateAvailableCountToQueryAsync(strCampaignDBConn, availableCount, xQuery, null);
        }
        
        /// <remarks/>
        public void UpdateAvailableCountToQueryAsync(string strCampaignDBConn, int availableCount, System.Xml.XmlNode xQuery, object userState) {
            if ((this.UpdateAvailableCountToQueryOperationCompleted == null)) {
                this.UpdateAvailableCountToQueryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateAvailableCountToQueryOperationCompleted);
            }
            this.InvokeAsync("UpdateAvailableCountToQuery", new object[] {
                        strCampaignDBConn,
                        availableCount,
                        xQuery}, this.UpdateAvailableCountToQueryOperationCompleted, userState);
        }
        
        private void OnUpdateAvailableCountToQueryOperationCompleted(object arg) {
            if ((this.UpdateAvailableCountToQueryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateAvailableCountToQueryCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateCampaignQueriesStats", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateCampaignQueriesStats(System.Xml.XmlNode xCampaign) {
            this.Invoke("UpdateCampaignQueriesStats", new object[] {
                        xCampaign});
        }
        
        /// <remarks/>
        public void UpdateCampaignQueriesStatsAsync(System.Xml.XmlNode xCampaign) {
            this.UpdateCampaignQueriesStatsAsync(xCampaign, null);
        }
        
        /// <remarks/>
        public void UpdateCampaignQueriesStatsAsync(System.Xml.XmlNode xCampaign, object userState) {
            if ((this.UpdateCampaignQueriesStatsOperationCompleted == null)) {
                this.UpdateCampaignQueriesStatsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateCampaignQueriesStatsOperationCompleted);
            }
            this.InvokeAsync("UpdateCampaignQueriesStats", new object[] {
                        xCampaign}, this.UpdateCampaignQueriesStatsOperationCompleted, userState);
        }
        
        private void OnUpdateCampaignQueriesStatsOperationCompleted(object arg) {
            if ((this.UpdateCampaignQueriesStatsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateCampaignQueriesStatsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetQueryDetailsByQueryID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetQueryDetailsByQueryID(System.Xml.XmlNode xCampaign, string strQueryID) {
            object[] results = this.Invoke("GetQueryDetailsByQueryID", new object[] {
                        xCampaign,
                        strQueryID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetQueryDetailsByQueryIDAsync(System.Xml.XmlNode xCampaign, string strQueryID) {
            this.GetQueryDetailsByQueryIDAsync(xCampaign, strQueryID, null);
        }
        
        /// <remarks/>
        public void GetQueryDetailsByQueryIDAsync(System.Xml.XmlNode xCampaign, string strQueryID, object userState) {
            if ((this.GetQueryDetailsByQueryIDOperationCompleted == null)) {
                this.GetQueryDetailsByQueryIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetQueryDetailsByQueryIDOperationCompleted);
            }
            this.InvokeAsync("GetQueryDetailsByQueryID", new object[] {
                        xCampaign,
                        strQueryID}, this.GetQueryDetailsByQueryIDOperationCompleted, userState);
        }
        
        private void OnGetQueryDetailsByQueryIDOperationCompleted(object arg) {
            if ((this.GetQueryDetailsByQueryIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetQueryDetailsByQueryIDCompleted(this, new GetQueryDetailsByQueryIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteQuery", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DeleteQuery(System.Xml.XmlNode xCampaign, long queryID) {
            object[] results = this.Invoke("DeleteQuery", new object[] {
                        xCampaign,
                        queryID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteQueryAsync(System.Xml.XmlNode xCampaign, long queryID) {
            this.DeleteQueryAsync(xCampaign, queryID, null);
        }
        
        /// <remarks/>
        public void DeleteQueryAsync(System.Xml.XmlNode xCampaign, long queryID, object userState) {
            if ((this.DeleteQueryOperationCompleted == null)) {
                this.DeleteQueryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteQueryOperationCompleted);
            }
            this.InvokeAsync("DeleteQuery", new object[] {
                        xCampaign,
                        queryID}, this.DeleteQueryOperationCompleted, userState);
        }
        
        private void OnDeleteQueryOperationCompleted(object arg) {
            if ((this.DeleteQueryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteQueryCompleted(this, new DeleteQueryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteQueryByName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DeleteQueryByName(System.Xml.XmlNode xCampaign, string queryName) {
            object[] results = this.Invoke("DeleteQueryByName", new object[] {
                        xCampaign,
                        queryName});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteQueryByNameAsync(System.Xml.XmlNode xCampaign, string queryName) {
            this.DeleteQueryByNameAsync(xCampaign, queryName, null);
        }
        
        /// <remarks/>
        public void DeleteQueryByNameAsync(System.Xml.XmlNode xCampaign, string queryName, object userState) {
            if ((this.DeleteQueryByNameOperationCompleted == null)) {
                this.DeleteQueryByNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteQueryByNameOperationCompleted);
            }
            this.InvokeAsync("DeleteQueryByName", new object[] {
                        xCampaign,
                        queryName}, this.DeleteQueryByNameOperationCompleted, userState);
        }
        
        private void OnDeleteQueryByNameOperationCompleted(object arg) {
            if ((this.DeleteQueryByNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteQueryByNameCompleted(this, new DeleteQueryByNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteQueryDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DeleteQueryDetail(System.Xml.XmlNode xCampaign, long queryDetailID) {
            object[] results = this.Invoke("DeleteQueryDetail", new object[] {
                        xCampaign,
                        queryDetailID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteQueryDetailAsync(System.Xml.XmlNode xCampaign, long queryDetailID) {
            this.DeleteQueryDetailAsync(xCampaign, queryDetailID, null);
        }
        
        /// <remarks/>
        public void DeleteQueryDetailAsync(System.Xml.XmlNode xCampaign, long queryDetailID, object userState) {
            if ((this.DeleteQueryDetailOperationCompleted == null)) {
                this.DeleteQueryDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteQueryDetailOperationCompleted);
            }
            this.InvokeAsync("DeleteQueryDetail", new object[] {
                        xCampaign,
                        queryDetailID}, this.DeleteQueryDetailOperationCompleted, userState);
        }
        
        private void OnDeleteQueryDetailOperationCompleted(object arg) {
            if ((this.DeleteQueryDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteQueryDetailCompleted(this, new DeleteQueryDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AreaCodeRuleInsertUpdate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode AreaCodeRuleInsertUpdate(System.Xml.XmlNode xAreaCodeRule) {
            object[] results = this.Invoke("AreaCodeRuleInsertUpdate", new object[] {
                        xAreaCodeRule});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void AreaCodeRuleInsertUpdateAsync(System.Xml.XmlNode xAreaCodeRule) {
            this.AreaCodeRuleInsertUpdateAsync(xAreaCodeRule, null);
        }
        
        /// <remarks/>
        public void AreaCodeRuleInsertUpdateAsync(System.Xml.XmlNode xAreaCodeRule, object userState) {
            if ((this.AreaCodeRuleInsertUpdateOperationCompleted == null)) {
                this.AreaCodeRuleInsertUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAreaCodeRuleInsertUpdateOperationCompleted);
            }
            this.InvokeAsync("AreaCodeRuleInsertUpdate", new object[] {
                        xAreaCodeRule}, this.AreaCodeRuleInsertUpdateOperationCompleted, userState);
        }
        
        private void OnAreaCodeRuleInsertUpdateOperationCompleted(object arg) {
            if ((this.AreaCodeRuleInsertUpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AreaCodeRuleInsertUpdateCompleted(this, new AreaCodeRuleInsertUpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AreaCodeInsertUpdate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode AreaCodeInsertUpdate(System.Xml.XmlNode xAreaCode) {
            object[] results = this.Invoke("AreaCodeInsertUpdate", new object[] {
                        xAreaCode});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void AreaCodeInsertUpdateAsync(System.Xml.XmlNode xAreaCode) {
            this.AreaCodeInsertUpdateAsync(xAreaCode, null);
        }
        
        /// <remarks/>
        public void AreaCodeInsertUpdateAsync(System.Xml.XmlNode xAreaCode, object userState) {
            if ((this.AreaCodeInsertUpdateOperationCompleted == null)) {
                this.AreaCodeInsertUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAreaCodeInsertUpdateOperationCompleted);
            }
            this.InvokeAsync("AreaCodeInsertUpdate", new object[] {
                        xAreaCode}, this.AreaCodeInsertUpdateOperationCompleted, userState);
        }
        
        private void OnAreaCodeInsertUpdateOperationCompleted(object arg) {
            if ((this.AreaCodeInsertUpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AreaCodeInsertUpdateCompleted(this, new AreaCodeInsertUpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAreaCode", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAreaCode() {
            object[] results = this.Invoke("GetAreaCode", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAreaCodeAsync() {
            this.GetAreaCodeAsync(null);
        }
        
        /// <remarks/>
        public void GetAreaCodeAsync(object userState) {
            if ((this.GetAreaCodeOperationCompleted == null)) {
                this.GetAreaCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAreaCodeOperationCompleted);
            }
            this.InvokeAsync("GetAreaCode", new object[0], this.GetAreaCodeOperationCompleted, userState);
        }
        
        private void OnGetAreaCodeOperationCompleted(object arg) {
            if ((this.GetAreaCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAreaCodeCompleted(this, new GetAreaCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteAreaCode", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteAreaCode(long areaCodeID) {
            this.Invoke("DeleteAreaCode", new object[] {
                        areaCodeID});
        }
        
        /// <remarks/>
        public void DeleteAreaCodeAsync(long areaCodeID) {
            this.DeleteAreaCodeAsync(areaCodeID, null);
        }
        
        /// <remarks/>
        public void DeleteAreaCodeAsync(long areaCodeID, object userState) {
            if ((this.DeleteAreaCodeOperationCompleted == null)) {
                this.DeleteAreaCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteAreaCodeOperationCompleted);
            }
            this.InvokeAsync("DeleteAreaCode", new object[] {
                        areaCodeID}, this.DeleteAreaCodeOperationCompleted, userState);
        }
        
        private void OnDeleteAreaCodeOperationCompleted(object arg) {
            if ((this.DeleteAreaCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteAreaCodeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAreaCodeRuleByAgentID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetAreaCodeRuleByAgentID(long agentID) {
            object[] results = this.Invoke("GetAreaCodeRuleByAgentID", new object[] {
                        agentID});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetAreaCodeRuleByAgentIDAsync(long agentID) {
            this.GetAreaCodeRuleByAgentIDAsync(agentID, null);
        }
        
        /// <remarks/>
        public void GetAreaCodeRuleByAgentIDAsync(long agentID, object userState) {
            if ((this.GetAreaCodeRuleByAgentIDOperationCompleted == null)) {
                this.GetAreaCodeRuleByAgentIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAreaCodeRuleByAgentIDOperationCompleted);
            }
            this.InvokeAsync("GetAreaCodeRuleByAgentID", new object[] {
                        agentID}, this.GetAreaCodeRuleByAgentIDOperationCompleted, userState);
        }
        
        private void OnGetAreaCodeRuleByAgentIDOperationCompleted(object arg) {
            if ((this.GetAreaCodeRuleByAgentIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAreaCodeRuleByAgentIDCompleted(this, new GetAreaCodeRuleByAgentIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GlobalDialingInsertUpdate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GlobalDialingInsertUpdate(System.Xml.XmlNode xGlobalDialing) {
            object[] results = this.Invoke("GlobalDialingInsertUpdate", new object[] {
                        xGlobalDialing});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GlobalDialingInsertUpdateAsync(System.Xml.XmlNode xGlobalDialing) {
            this.GlobalDialingInsertUpdateAsync(xGlobalDialing, null);
        }
        
        /// <remarks/>
        public void GlobalDialingInsertUpdateAsync(System.Xml.XmlNode xGlobalDialing, object userState) {
            if ((this.GlobalDialingInsertUpdateOperationCompleted == null)) {
                this.GlobalDialingInsertUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGlobalDialingInsertUpdateOperationCompleted);
            }
            this.InvokeAsync("GlobalDialingInsertUpdate", new object[] {
                        xGlobalDialing}, this.GlobalDialingInsertUpdateOperationCompleted, userState);
        }
        
        private void OnGlobalDialingInsertUpdateOperationCompleted(object arg) {
            if ((this.GlobalDialingInsertUpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GlobalDialingInsertUpdateCompleted(this, new GlobalDialingInsertUpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetGlobalDialingParams", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetGlobalDialingParams() {
            object[] results = this.Invoke("GetGlobalDialingParams", new object[0]);
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetGlobalDialingParamsAsync() {
            this.GetGlobalDialingParamsAsync(null);
        }
        
        /// <remarks/>
        public void GetGlobalDialingParamsAsync(object userState) {
            if ((this.GetGlobalDialingParamsOperationCompleted == null)) {
                this.GetGlobalDialingParamsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetGlobalDialingParamsOperationCompleted);
            }
            this.InvokeAsync("GetGlobalDialingParams", new object[0], this.GetGlobalDialingParamsOperationCompleted, userState);
        }
        
        private void OnGetGlobalDialingParamsOperationCompleted(object arg) {
            if ((this.GetGlobalDialingParamsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetGlobalDialingParamsCompleted(this, new GetGlobalDialingParamsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAgentStat", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAgentStat(string campaignDBConnString, long campaignId) {
            object[] results = this.Invoke("GetAgentStat", new object[] {
                        campaignDBConnString,
                        campaignId});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAgentStatAsync(string campaignDBConnString, long campaignId) {
            this.GetAgentStatAsync(campaignDBConnString, campaignId, null);
        }
        
        /// <remarks/>
        public void GetAgentStatAsync(string campaignDBConnString, long campaignId, object userState) {
            if ((this.GetAgentStatOperationCompleted == null)) {
                this.GetAgentStatOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAgentStatOperationCompleted);
            }
            this.InvokeAsync("GetAgentStat", new object[] {
                        campaignDBConnString,
                        campaignId}, this.GetAgentStatOperationCompleted, userState);
        }
        
        private void OnGetAgentStatOperationCompleted(object arg) {
            if ((this.GetAgentStatCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAgentStatCompleted(this, new GetAgentStatCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAgentStatByStatID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetAgentStatByStatID(System.Xml.XmlNode xCampaign, long agentStatID) {
            object[] results = this.Invoke("GetAgentStatByStatID", new object[] {
                        xCampaign,
                        agentStatID});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetAgentStatByStatIDAsync(System.Xml.XmlNode xCampaign, long agentStatID) {
            this.GetAgentStatByStatIDAsync(xCampaign, agentStatID, null);
        }
        
        /// <remarks/>
        public void GetAgentStatByStatIDAsync(System.Xml.XmlNode xCampaign, long agentStatID, object userState) {
            if ((this.GetAgentStatByStatIDOperationCompleted == null)) {
                this.GetAgentStatByStatIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAgentStatByStatIDOperationCompleted);
            }
            this.InvokeAsync("GetAgentStatByStatID", new object[] {
                        xCampaign,
                        agentStatID}, this.GetAgentStatByStatIDOperationCompleted, userState);
        }
        
        private void OnGetAgentStatByStatIDOperationCompleted(object arg) {
            if ((this.GetAgentStatByStatIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAgentStatByStatIDCompleted(this, new GetAgentStatByStatIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertUpdateAgentStat", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode InsertUpdateAgentStat(System.Xml.XmlNode xCampaign, System.Xml.XmlNode xAgentStat) {
            object[] results = this.Invoke("InsertUpdateAgentStat", new object[] {
                        xCampaign,
                        xAgentStat});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void InsertUpdateAgentStatAsync(System.Xml.XmlNode xCampaign, System.Xml.XmlNode xAgentStat) {
            this.InsertUpdateAgentStatAsync(xCampaign, xAgentStat, null);
        }
        
        /// <remarks/>
        public void InsertUpdateAgentStatAsync(System.Xml.XmlNode xCampaign, System.Xml.XmlNode xAgentStat, object userState) {
            if ((this.InsertUpdateAgentStatOperationCompleted == null)) {
                this.InsertUpdateAgentStatOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertUpdateAgentStatOperationCompleted);
            }
            this.InvokeAsync("InsertUpdateAgentStat", new object[] {
                        xCampaign,
                        xAgentStat}, this.InsertUpdateAgentStatOperationCompleted, userState);
        }
        
        private void OnInsertUpdateAgentStatOperationCompleted(object arg) {
            if ((this.InsertUpdateAgentStatCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertUpdateAgentStatCompleted(this, new InsertUpdateAgentStatCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateAgentStats", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateAgentStats(System.Xml.XmlNode xCampaign, long agentID, string strLeadprocessed) {
            this.Invoke("UpdateAgentStats", new object[] {
                        xCampaign,
                        agentID,
                        strLeadprocessed});
        }
        
        /// <remarks/>
        public void UpdateAgentStatsAsync(System.Xml.XmlNode xCampaign, long agentID, string strLeadprocessed) {
            this.UpdateAgentStatsAsync(xCampaign, agentID, strLeadprocessed, null);
        }
        
        /// <remarks/>
        public void UpdateAgentStatsAsync(System.Xml.XmlNode xCampaign, long agentID, string strLeadprocessed, object userState) {
            if ((this.UpdateAgentStatsOperationCompleted == null)) {
                this.UpdateAgentStatsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateAgentStatsOperationCompleted);
            }
            this.InvokeAsync("UpdateAgentStats", new object[] {
                        xCampaign,
                        agentID,
                        strLeadprocessed}, this.UpdateAgentStatsOperationCompleted, userState);
        }
        
        private void OnUpdateAgentStatsOperationCompleted(object arg) {
            if ((this.UpdateAgentStatsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateAgentStatsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateAgentStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateAgentStatus(System.Xml.XmlNode xCampaign, System.Xml.XmlNode xAgent) {
            this.Invoke("UpdateAgentStatus", new object[] {
                        xCampaign,
                        xAgent});
        }
        
        /// <remarks/>
        public void UpdateAgentStatusAsync(System.Xml.XmlNode xCampaign, System.Xml.XmlNode xAgent) {
            this.UpdateAgentStatusAsync(xCampaign, xAgent, null);
        }
        
        /// <remarks/>
        public void UpdateAgentStatusAsync(System.Xml.XmlNode xCampaign, System.Xml.XmlNode xAgent, object userState) {
            if ((this.UpdateAgentStatusOperationCompleted == null)) {
                this.UpdateAgentStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateAgentStatusOperationCompleted);
            }
            this.InvokeAsync("UpdateAgentStatus", new object[] {
                        xCampaign,
                        xAgent}, this.UpdateAgentStatusOperationCompleted, userState);
        }
        
        private void OnUpdateAgentStatusOperationCompleted(object arg) {
            if ((this.UpdateAgentStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateAgentStatusCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCampaignFields", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetCampaignFields(System.Xml.XmlNode xCampaign) {
            object[] results = this.Invoke("GetCampaignFields", new object[] {
                        xCampaign});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetCampaignFieldsAsync(System.Xml.XmlNode xCampaign) {
            this.GetCampaignFieldsAsync(xCampaign, null);
        }
        
        /// <remarks/>
        public void GetCampaignFieldsAsync(System.Xml.XmlNode xCampaign, object userState) {
            if ((this.GetCampaignFieldsOperationCompleted == null)) {
                this.GetCampaignFieldsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCampaignFieldsOperationCompleted);
            }
            this.InvokeAsync("GetCampaignFields", new object[] {
                        xCampaign}, this.GetCampaignFieldsOperationCompleted, userState);
        }
        
        private void OnGetCampaignFieldsOperationCompleted(object arg) {
            if ((this.GetCampaignFieldsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCampaignFieldsCompleted(this, new GetCampaignFieldsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCampaignStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long GetCampaignStatus(long campaignID) {
            object[] results = this.Invoke("GetCampaignStatus", new object[] {
                        campaignID});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void GetCampaignStatusAsync(long campaignID) {
            this.GetCampaignStatusAsync(campaignID, null);
        }
        
        /// <remarks/>
        public void GetCampaignStatusAsync(long campaignID, object userState) {
            if ((this.GetCampaignStatusOperationCompleted == null)) {
                this.GetCampaignStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCampaignStatusOperationCompleted);
            }
            this.InvokeAsync("GetCampaignStatus", new object[] {
                        campaignID}, this.GetCampaignStatusOperationCompleted, userState);
        }
        
        private void OnGetCampaignStatusOperationCompleted(object arg) {
            if ((this.GetCampaignStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCampaignStatusCompleted(this, new GetCampaignStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFieldTypes", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetFieldTypes() {
            object[] results = this.Invoke("GetFieldTypes", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetFieldTypesAsync() {
            this.GetFieldTypesAsync(null);
        }
        
        /// <remarks/>
        public void GetFieldTypesAsync(object userState) {
            if ((this.GetFieldTypesOperationCompleted == null)) {
                this.GetFieldTypesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFieldTypesOperationCompleted);
            }
            this.InvokeAsync("GetFieldTypes", new object[0], this.GetFieldTypesOperationCompleted, userState);
        }
        
        private void OnGetFieldTypesOperationCompleted(object arg) {
            if ((this.GetFieldTypesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFieldTypesCompleted(this, new GetFieldTypesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CampaignFieldsInsertUpdate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode CampaignFieldsInsertUpdate(System.Xml.XmlNode xCampaign, System.Xml.XmlNode xCampaignFields) {
            object[] results = this.Invoke("CampaignFieldsInsertUpdate", new object[] {
                        xCampaign,
                        xCampaignFields});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void CampaignFieldsInsertUpdateAsync(System.Xml.XmlNode xCampaign, System.Xml.XmlNode xCampaignFields) {
            this.CampaignFieldsInsertUpdateAsync(xCampaign, xCampaignFields, null);
        }
        
        /// <remarks/>
        public void CampaignFieldsInsertUpdateAsync(System.Xml.XmlNode xCampaign, System.Xml.XmlNode xCampaignFields, object userState) {
            if ((this.CampaignFieldsInsertUpdateOperationCompleted == null)) {
                this.CampaignFieldsInsertUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCampaignFieldsInsertUpdateOperationCompleted);
            }
            this.InvokeAsync("CampaignFieldsInsertUpdate", new object[] {
                        xCampaign,
                        xCampaignFields}, this.CampaignFieldsInsertUpdateOperationCompleted, userState);
        }
        
        private void OnCampaignFieldsInsertUpdateOperationCompleted(object arg) {
            if ((this.CampaignFieldsInsertUpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CampaignFieldsInsertUpdateCompleted(this, new CampaignFieldsInsertUpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteCampaignField", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteCampaignField(System.Xml.XmlNode xCampaign, long fieldID) {
            this.Invoke("DeleteCampaignField", new object[] {
                        xCampaign,
                        fieldID});
        }
        
        /// <remarks/>
        public void DeleteCampaignFieldAsync(System.Xml.XmlNode xCampaign, long fieldID) {
            this.DeleteCampaignFieldAsync(xCampaign, fieldID, null);
        }
        
        /// <remarks/>
        public void DeleteCampaignFieldAsync(System.Xml.XmlNode xCampaign, long fieldID, object userState) {
            if ((this.DeleteCampaignFieldOperationCompleted == null)) {
                this.DeleteCampaignFieldOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteCampaignFieldOperationCompleted);
            }
            this.InvokeAsync("DeleteCampaignField", new object[] {
                        xCampaign,
                        fieldID}, this.DeleteCampaignFieldOperationCompleted, userState);
        }
        
        private void OnDeleteCampaignFieldOperationCompleted(object arg) {
            if ((this.DeleteCampaignFieldCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteCampaignFieldCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void InsertUpdateScheduledCampaignCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void UpdateCampaignScheduleCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetPhoneLinesInUseCountCompletedEventHandler(object sender, GetPhoneLinesInUseCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPhoneLinesInUseCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPhoneLinesInUseCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void CheckCampaignTransferCallCompletedEventHandler(object sender, CheckCampaignTransferCallCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckCampaignTransferCallCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckCampaignTransferCallCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void SubmitAdminRequestCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetAdminRequestsCompletedEventHandler(object sender, GetAdminRequestsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAdminRequestsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAdminRequestsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void UpdateAdminRequestStatusCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetTrainingSchemeCompletedEventHandler(object sender, GetTrainingSchemeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTrainingSchemeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTrainingSchemeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetTrainingPageListCompletedEventHandler(object sender, GetTrainingPageListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTrainingPageListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTrainingPageListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetTrainingSchemeListCompletedEventHandler(object sender, GetTrainingSchemeListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTrainingSchemeListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTrainingSchemeListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void UpdateActiveTrainingSchemeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void DeleteTrainingSchemeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void AddTrainingSchemeCompletedEventHandler(object sender, AddTrainingSchemeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddTrainingSchemeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddTrainingSchemeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetTrainingPageCompletedEventHandler(object sender, GetTrainingPageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTrainingPageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTrainingPageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void TrainingPageInsertUpdateCompletedEventHandler(object sender, TrainingPageInsertUpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TrainingPageInsertUpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TrainingPageInsertUpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetActiveTrainingPageListCompletedEventHandler(object sender, GetActiveTrainingPageListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetActiveTrainingPageListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetActiveTrainingPageListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void CampaignInsertUpdateCompletedEventHandler(object sender, CampaignInsertUpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CampaignInsertUpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CampaignInsertUpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void ScrubDNCCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void CampaignCloneCompletedEventHandler(object sender, CampaignCloneCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CampaignCloneCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CampaignCloneCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void CampaignStatusUpdateCompletedEventHandler(object sender, CampaignStatusUpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CampaignStatusUpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CampaignStatusUpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void ResetCampaignsToIdleCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void ShutdownAllCampaignsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetCampaignActiveDialCountCompletedEventHandler(object sender, GetCampaignActiveDialCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCampaignActiveDialCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCampaignActiveDialCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void CampaignDialStatusUpdateCompletedEventHandler(object sender, CampaignDialStatusUpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CampaignDialStatusUpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CampaignDialStatusUpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetCampaignListCompletedEventHandler(object sender, GetCampaignListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCampaignListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCampaignListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetActiveCampaignListCompletedEventHandler(object sender, GetActiveCampaignListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetActiveCampaignListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetActiveCampaignListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetCampaignScoreBoardDataCompletedEventHandler(object sender, GetCampaignScoreBoardDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCampaignScoreBoardDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCampaignScoreBoardDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void DeleteCampaignCompletedEventHandler(object sender, DeleteCampaignCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteCampaignCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteCampaignCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetCampaignByCampaignIDCompletedEventHandler(object sender, GetCampaignByCampaignIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCampaignByCampaignIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCampaignByCampaignIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void DeleteExportedLeadsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void UpdateCallDetailCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void SetCallHangupCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void IsCallHangupCompletedEventHandler(object sender, IsCallHangupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsCallHangupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsCallHangupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void AddAgentToCallDetailCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void AddVerificationAgentToCallDetailCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void AddResultCodeToCallListCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetOffsiteTransferNumberCompletedEventHandler(object sender, GetOffsiteTransferNumberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOffsiteTransferNumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOffsiteTransferNumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LogSilentCallCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void UpdateCallCompletionCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void UpdateCampaignDetailsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetCampaignDetailsByKeyCompletedEventHandler(object sender, GetCampaignDetailsByKeyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCampaignDetailsByKeyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCampaignDetailsByKeyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetManualDailCallDetailsCompletedEventHandler(object sender, GetManualDailCallDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetManualDailCallDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetManualDailCallDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetResultCodesCompletedEventHandler(object sender, GetResultCodesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetResultCodesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetResultCodesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void ResultCodeInsertUpdateCompletedEventHandler(object sender, ResultCodeInsertUpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ResultCodeInsertUpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ResultCodeInsertUpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetResultCodeByResultCodeIDCompletedEventHandler(object sender, GetResultCodeByResultCodeIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetResultCodeByResultCodeIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetResultCodeByResultCodeIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetOtherParameterCompletedEventHandler(object sender, GetOtherParameterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOtherParameterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOtherParameterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void OtherParameterInsertUpdateCompletedEventHandler(object sender, OtherParameterInsertUpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class OtherParameterInsertUpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal OtherParameterInsertUpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetDialingParameterCompletedEventHandler(object sender, GetDialingParameterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDialingParameterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDialingParameterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void DialingParameterInsertUpdateCompletedEventHandler(object sender, DialingParameterInsertUpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DialingParameterInsertUpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DialingParameterInsertUpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void InsertDialerActivityCompletedEventHandler(object sender, InsertDialerActivityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertDialerActivityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertDialerActivityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void UpdateDialerStartCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void UpdateDialerStopCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetDigitalizedRecordingCompletedEventHandler(object sender, GetDigitalizedRecordingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDigitalizedRecordingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDigitalizedRecordingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void DigitalizedRecordingInsertUpdateCompletedEventHandler(object sender, DigitalizedRecordingInsertUpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DigitalizedRecordingInsertUpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DigitalizedRecordingInsertUpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetCampaignQueryStatusCompletedEventHandler(object sender, GetCampaignQueryStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCampaignQueryStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCampaignQueryStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void UpdateQueryStatusCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void PrepareDialerQueryCompletedEventHandler(object sender, PrepareDialerQueryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PrepareDialerQueryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PrepareDialerQueryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void CampaignQueryStatusUpdateCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void CampaignQueryStatusUpdateDialerCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void CampaignQueryCompleteCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void UpdateCampaignQueryStatsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void UpdateCampaignQueryInDialerQueueCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void ClearQueryStatsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetScriptListCompletedEventHandler(object sender, GetScriptListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetScriptListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetScriptListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetPageListByScriptIdCompletedEventHandler(object sender, GetPageListByScriptIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPageListByScriptIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPageListByScriptIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetScriptByScriptIDCompletedEventHandler(object sender, GetScriptByScriptIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetScriptByScriptIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetScriptByScriptIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetScriptByScriptGUIDCompletedEventHandler(object sender, GetScriptByScriptGUIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetScriptByScriptGUIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetScriptByScriptGUIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void CloneScriptCompletedEventHandler(object sender, CloneScriptCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CloneScriptCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CloneScriptCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void ScriptInsertUpdateCompletedEventHandler(object sender, ScriptInsertUpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ScriptInsertUpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ScriptInsertUpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void DeleteScriptCompletedEventHandler(object sender, DeleteScriptCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteScriptCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteScriptCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void QueryDetailInsertUpdateCompletedEventHandler(object sender, QueryDetailInsertUpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryDetailInsertUpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryDetailInsertUpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetQueryListCompletedEventHandler(object sender, GetQueryListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetQueryListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetQueryListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetActiveQueryListCompletedEventHandler(object sender, GetActiveQueryListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetActiveQueryListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetActiveQueryListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetStandbyQueryListCompletedEventHandler(object sender, GetStandbyQueryListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStandbyQueryListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStandbyQueryListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetCampaignDataCompletedEventHandler(object sender, GetCampaignDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCampaignDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCampaignDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetCampaignData_Recycle_LastCompletedEventHandler(object sender, GetCampaignData_Recycle_LastCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCampaignData_Recycle_LastCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCampaignData_Recycle_LastCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void IsNeverCallSetCompletedEventHandler(object sender, IsNeverCallSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsNeverCallSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsNeverCallSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void UpdateAvailableCountToQueryCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void UpdateCampaignQueriesStatsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetQueryDetailsByQueryIDCompletedEventHandler(object sender, GetQueryDetailsByQueryIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetQueryDetailsByQueryIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetQueryDetailsByQueryIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void DeleteQueryCompletedEventHandler(object sender, DeleteQueryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteQueryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteQueryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void DeleteQueryByNameCompletedEventHandler(object sender, DeleteQueryByNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteQueryByNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteQueryByNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void DeleteQueryDetailCompletedEventHandler(object sender, DeleteQueryDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteQueryDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteQueryDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void AreaCodeRuleInsertUpdateCompletedEventHandler(object sender, AreaCodeRuleInsertUpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AreaCodeRuleInsertUpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AreaCodeRuleInsertUpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void AreaCodeInsertUpdateCompletedEventHandler(object sender, AreaCodeInsertUpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AreaCodeInsertUpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AreaCodeInsertUpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetAreaCodeCompletedEventHandler(object sender, GetAreaCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAreaCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAreaCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void DeleteAreaCodeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetAreaCodeRuleByAgentIDCompletedEventHandler(object sender, GetAreaCodeRuleByAgentIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAreaCodeRuleByAgentIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAreaCodeRuleByAgentIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GlobalDialingInsertUpdateCompletedEventHandler(object sender, GlobalDialingInsertUpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GlobalDialingInsertUpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GlobalDialingInsertUpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetGlobalDialingParamsCompletedEventHandler(object sender, GetGlobalDialingParamsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetGlobalDialingParamsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetGlobalDialingParamsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetAgentStatCompletedEventHandler(object sender, GetAgentStatCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAgentStatCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAgentStatCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetAgentStatByStatIDCompletedEventHandler(object sender, GetAgentStatByStatIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAgentStatByStatIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAgentStatByStatIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void InsertUpdateAgentStatCompletedEventHandler(object sender, InsertUpdateAgentStatCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertUpdateAgentStatCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertUpdateAgentStatCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void UpdateAgentStatsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void UpdateAgentStatusCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetCampaignFieldsCompletedEventHandler(object sender, GetCampaignFieldsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCampaignFieldsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCampaignFieldsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetCampaignStatusCompletedEventHandler(object sender, GetCampaignStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCampaignStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCampaignStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetFieldTypesCompletedEventHandler(object sender, GetFieldTypesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFieldTypesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFieldTypesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void CampaignFieldsInsertUpdateCompletedEventHandler(object sender, CampaignFieldsInsertUpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CampaignFieldsInsertUpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CampaignFieldsInsertUpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void DeleteCampaignFieldCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}

#pragma warning restore 1591